{"version":3,"sources":["types/HitObject.ts","helpers/assertNever.ts","types/ControlPoint.ts","helpers/beatmap-processing.ts","helpers/utilities.ts","helpers/point-arithmetic.ts","helpers/type-inference.ts","helpers/beatmap-fill-defaults.ts","helpers/skills/Skill.ts","helpers/skills/Aim.ts","helpers/skills/Speed.ts","helpers/beatmap-difficulty.ts","types/Mod.ts","helpers/mods/GameMod.ts","types/EffectFlags.ts","types/HitObjectParsingFlags.ts","types/PathType.ts","helpers/mods/DoubleTimeMod.ts","helpers/mods/EasyMod.ts","helpers/mods/HalfTimeMod.ts","helpers/mods/HardRockMod.ts","helpers/mods/mod-table.ts","helpers/path-approximation.ts","helpers/SliderPath.ts","helpers/parsing/beatmap-parser.ts","helpers/beatmap.ts","components/beatmap-data/BasicStats.tsx","components/base/PartialBar.tsx","components/base/stats/Stat.tsx","components/base/stats/FractionalStat.tsx","helpers/style-variables.ts","components/base/stats/StatDivider.tsx","components/beatmap-data/DifficultyStats.tsx","components/beatmap-data/HitObjectStats.tsx","components/beatmap-data/HitObject.tsx","components/beatmap-data/ComboColors.tsx","components/beatmap-data/MiscStats.tsx","components/beatmap-data/Mod.tsx","components/beatmap-data/ModSelector.tsx","components/Main.tsx","components/beatmap-data/BeatmapSummary.tsx","components/Sidebar.tsx","hooks/useFileUpload.tsx","serviceWorker.ts","index.tsx","App.tsx","beatmap-mocks/quaver.beatmap.ts"],"names":["HitObjectType","NestedHitObjectType","assertNever","value","Error","concat","ControlPointType","SliderEventType","merge","result","_len","arguments","length","styles","Array","_key","_i","_styles","style","Object","assign","sortBy","list","field","sort","a","b","clamp","min","max","Math","round","decimalPlaces","exponent","pow","toString","coalesce","fallback","undefined","hasFlag","enumValue","flag","isNotNull","createStyleSheet","pointSum","x","y","pointSubtract","pointMultiply","point","scalar","operate","sum","other","subtract","multiply","divide","pointDivide","get","getNorm","sqrt","getSquaredNorm","dotProduct","isSamePoint","isCircle","hitObject","type","Circle","isSlider","Slider","isSpinner","Spinner","isSliderTip","SliderCircle","isSliderCircle","SliderTailCircle","isSliderTailCircle","processBeatmap","partialBeatmap","clock","mods","Set","beatmap","partialHitObjects","baseDifficulty","hpDrainRate","circleSize","overallDifficulty","approachRate","audioFilename","audioLeadIn","previewTime","countdown","stackLeniency","mode","distanceSpacing","beatDivisor","gridSize","title","titleUnicode","artist","artistUnicode","creator","version","source","tags","beatmapId","beatmapSetId","originalBaseDifficulty","objectSpread","sliderMultiplier","sliderTickRate","timingPoints","timingControlPoints","difficultyControlPoints","effectControlPoints","legacySampleControlPoints","colors","hitObjects","map","h","partialHitObject","baseHitObject","startTime","newCombo","comboOffset","soundType","indexInCurrentCombo","comboIndex","lastInCombo","createBaseHitObject","base","metadata","soundSamples","stackHeight","stackedPosition","createCircle","path","repeatCount","timingPoint","difficultyPoint","velocity","tickDistance","nestedHitObjects","createSlider","endTime","createSpinner","createHitObject","fillBeatmapDefaults","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","timingChange","push","createTimingControlPoint","createDifficultyControlPoint","createEffectControlPoint","createLegacySampleControlPoint","err","return","fillControlPoints","firstObject","forceNewCombo","extraComboOffset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fillHitObjectsComboData","filter","forEach","slider","controlPoint","getControlPoint","Timing","time","beatLength","timeSignature","getTimingControlPoint","Difficulty","speedMultiplier","getDifficultyControlPoint","scoringDistance","fillSliderMetadata","computedProperties","getSliderComputedProperties","sliderProperties","Head","spanIndex","spanStartTime","pathProgress","createSliderEventHead","spanCount","span","apply","toConsumableArray","createSliderEventTicks","createSliderEventRepeat","spanDuration","totalDuration","finalSpanIndex","finalSpanStartTime","finalSpanEndTime","finalProgress","LegacyLastTick","createSliderEventLegacyLastTick","Tail","createSliderEventTail","getSliderEvents","event","position","createSliderCircle","Tick","SliderTick","positionAt","scale","getHitObjectScale","createSliderTick","Repeat","RepeatPoint","repeatIndex","createRepeatPoint","createSliderTailCircle","createNestedHitObject","fillNestedHitObjects","fillSliderData","mod","applyToDifficulty","_beatmap$hitObjects","toArray","first","rest","slice","lastObject","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","preProcessBeatmap","nested","postProcessBeatmap","applyToClock","hitObjectScale","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","stackOffset","fillStackedPositions","Effect","kiaiMode","omitFirstBarSignature","LegacySample","customSampleBank","sampleSet","sampleVolume","matches","t","pathDistance","minDistanceFromEnd","reversed","d","timeProgress","Skill","classCallCheck","this","strainPeaks","skillMultiplier","strainDecayBase","decayWeight","previous","currentStrain","currentSectionPeak","createClass","key","current","strainDecay","deltaTime","strainValueOf","offset","previousObject","decayedStrain","difficulty","weight","ms","Aim","_Skill","_getPrototypeOf2","_this","args","possibleConstructorReturn","getPrototypeOf","call","ANGLE_BONUS_BEGIN","PI","TIMING_THRESHOLD","inherits","object","angle","angleBonus","jumpDistance","sin","applyDiminishingExp","strainTime","jumpDistanceExp","travelDistanceExp","travelDistance","Speed","SINGLE_SPACING_THRESHOLD","PI_OVER_4","PI_OVER_2","MIN_SPEED_BONUS","MAX_SPEED_BONUS","SPEED_BALANCING_FACTOR","distance","speedBonus","fillBeatmapComputedAttributes","difficultyHitObjects","scalingFactor","hitObjectRadius","smallCircleBonus","getScalingFactor","getHitObjectRadius","step","i","range","lastLast","last","rate","lastTraversalData","getHitObjectTraversalData","lazyTravelDistance","lastCursorPosition","lazyEndPosition","v1","v2","dot","det","abs","atan2","getAngle","createDifficultyHitObject","createDifficultyHitObjects","calculatedDifficultyAttributes","sectionLength","currentSectionEnd","ceil","skills","_i2","_skills2","skill","saveCurrentPeak","startNewSectionFrom","_i3","_skills3","process","_skills","_skills4","slicedToArray","aim","speed","aimStrain","difficultyValue","speedStrain","starRating","maxCombo","getMaxCombo","originalAR","toleranceMS","getNewApproachRate","originalOD","getNewOverallDifficulty","createDifficultyAttributes","calculate","derivedDifficulty","approxFollowCircleRadius","progress","nestedHitObject","getNestedHitObjectProgress","pathPosition","diff","dist","norm","pointNormalize","getSliderTraversalData","Mod","EffectFlags","HitObjectParsingFlags","PathType","GameMod","DoubleTimeMod","_GameMod","EasyMod","HalfTimeMod","HardRockMod","MOD_TABLE","_MOD_TABLE","defineProperty","Easy","HalfTime","HardRock","DoubleTime","BEZIER_TOLERANCE","CATMULL_DETAIL","CIRCULAR_ARC_TOLERANCE","approximateBezier","controlPoints","output","count","subdivisionBuffer1","subdivisionBuffer2","toFlatten","freeBuffers","leftChild","parent","pop","bezierIsFlatEnough","bezierApproximate","rightChild","bezierSubdivide","left","right","subdivisionBuffer","midpoints","j","index","catmullFindPoint","vec1","vec2","vec3","vec4","t2","t3","factor1","factor2","factor3","BeatmapSection","SliderPath","pathType","calculatedPath","cumulativeLength","calculatePath","calculateCumulativeLength","progressToDistance","indexOfDistance","interpolateVertices","biggerDistancesIndexes","v","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","p0","p1","d0","d1","w","start","isLastPoint","currentPoint","nextPoint","cpSpan","calculateSubpath","subPath","isFirstPath","lastPath","subControlPoints","Catmull","v3","v4","c","PathApproximator","Bezier","Linear","PerfectCurve","_controlPoints","aSq","bSq","cSq","s","u","centre","dA","dC","r","thetaStart","thetaEnd","dir","thetaRange","orthoAtoC","amountPoints","acos","theta","o","cos","l","splice","COMMENT_START","parseBeatmap","content","lines","currentSection","line","sectionSearch","match","parseLine","console","log","parseLinesInto","replace","split","isLineValid","trim","startsWith","section","commentIndex","indexOf","substr","stripComments","General","_parseKeyValuePair","parseKeyValuePair","_parseKeyValuePair2","parseInt","parseFloat","parseGeneralLine","Editor","_parseKeyValuePair3","_parseKeyValuePair4","parseEditorLine","Metadata","_parseKeyValuePair5","_parseKeyValuePair6","parseMetadataLine","_parseKeyValuePair7","_parseKeyValuePair8","parseDifficultyLine","Events","TimingPoints","parts","_extractEffectFlags","effectFlags","Kiai","OmitFirstBarLine","extractEffectFlags","extractTimeSignature","extractSampleSet","extractCustomSampleBank","extractSampleVolume","extractTimingChange","extractSpeedMultiplier","parseTimingPointLine","Colors","_parseKeyValuePair9","_parseKeyValuePair10","_value$split$map","p","_value$split$map2","red","green","blue","alpha","parseColorLine","HitObjects","flags","getHitObjectType","parseCircleMetadata","parseSliderMetadata","parseSpinnerMetadata","NewCombo","ComboOffset","parseHitObjectLine","_metadata$0$split","_metadata$0$split2","points","pathLength","pair","_pair$split$map","_pair$split$map2","changeBeatmapMods","resetDifficultyAttributes","modInstances","add","getModInstances","BasicStats","react_default","createElement","className","PartialBar","props","filledPercentage","fraction","flexBasis","Stat","label","children","id","marginLeft","FractionalStat","Stat_Stat","PartialBar_PartialBar","backgroundColor","marginBottom","marginTop","StatDivider","DiffStat","precision","FractionalStat_FractionalStat","DifficultyStats","derivedAttributes","od","ar","DifficultyStats_DiffStat","StatDivider_StatDivider","HitObjectStats","sliderVelocities","minVelocity","maxVelocity","modeVelocity","valueFrequencies","reduce","table","entries","count1","getListMode","outerLayer","border","borderRadius","display","innerLayer","circle","alignItems","flexDirection","height","textAlign","width","text","color","flex","fontSize","fontWeight","textShadow","HitObject","ComboColors","Fragment","HitObject_HitObject","MiscStats","ComboColors_ComboColors","borderColor","borderStyle","borderWidth","boxSizing","cursor","margin","selected","blocked","modText","onClick","container","difficultyReductionMods","ModType","difficultyIncreaseMods","ModSelector","selectedMods","onModClick","beatmap_data_Mod_Mod","has","mutuallyExclusiveMods","Main","onBeatmapMutation","_useState","useState","_useState2","setSelectedMods","ModSelector_ModSelector","delete","_mutuallyExclusiveMod","removeConflictingMods","BasicStats_BasicStats","DifficultyStats_DifficultyStats","HitObjectStats_HitObjectStats","MiscStats_MiscStats","BeatmapSummary","isSelected","wrapper","Sidebar","handleImportClick","onUpload","fileInput","document","addEventListener","uploadEvent","fileReader","FileReader","onload","fileEvent","target","fileList","files","readAsText","click","useFileUpload","onImportBeatmap","Button_default","variant","beatmapList","BeatmapSummary_BeatmapSummary","selectedBeatmap","onSelectBeatmap","Boolean","window","location","hostname","ReactDOM","render","setBeatmapList","_useState3","_useState4","setSelectedBeatmap","handleImportBeatmap","beatmapString","readBeatmapFromString","Sidebar_Sidebar","beatmapIndex","Main_Main","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22b564ca.chunk.js","sourcesContent":["import { SliderPath } from '../helpers/SliderPath';\nimport { DifficultyControlPoint, TimingControlPoint } from './ControlPoint';\nimport { Point } from './Point';\n\nexport enum HitObjectType {\n    Circle,\n    Slider,\n    Spinner,\n}\n\nexport type HitObject = Circle | Slider | Spinner;\n\nexport interface BaseHitObject {\n    x: number;\n    y: number;\n    startTime: number;\n    newCombo: boolean;\n    comboOffset: number;\n    soundType: number;\n\n    // Computed\n    indexInCurrentCombo: number;\n    comboIndex: number;\n    lastInCombo: boolean;\n}\n\nexport interface Circle extends BaseHitObject {\n    type: HitObjectType.Circle;\n    metadata: CircleMetadata;\n}\n\nexport interface Slider extends BaseHitObject {\n    type: HitObjectType.Slider;\n    metadata: SliderMetadata;\n}\n\nexport interface Spinner extends BaseHitObject {\n    type: HitObjectType.Spinner;\n    metadata: SpinnerMetadata;\n}\n\n\nexport interface CircleMetadata {\n    soundSamples: string[];\n\n    // Computed\n    stackHeight: number;\n    stackedPosition: Point;\n}\n\nexport interface SliderMetadata {\n    path: SliderPath;\n    repeatCount: number;\n    soundSamples: string[];\n\n    // Computed\n    timingPoint: TimingControlPoint | null;\n    difficultyPoint: DifficultyControlPoint | null;\n    velocity: number;\n    tickDistance: number;\n    nestedHitObjects: NestedHitObject[];\n    stackHeight: number;\n    stackedPosition: Point;\n}\n\nexport enum NestedHitObjectType {\n    SliderCircle,\n    SliderTick,\n    RepeatPoint,\n    SliderTailCircle,\n}\n\nexport type NestedHitObject = SliderTick | SliderCircle | SliderTailCircle | RepeatPoint;\n\nexport interface SliderTick {\n    type: NestedHitObjectType.SliderTick;\n    spanIndex: number;\n    spanStartTime: number;\n    startTime: number;\n    position: Point;\n    stackHeight: number;\n    scale: number;\n}\n\nexport type SliderTip = SliderCircle | SliderTailCircle;\n\nexport interface SliderCircle {\n    type: NestedHitObjectType.SliderCircle;\n    startTime: number;\n    position: Point;\n    indexInCurrentCombo: number;\n    comboIndex: number;\n}\n\nexport interface SliderTailCircle {\n    type: NestedHitObjectType.SliderTailCircle;\n    startTime: number;\n    position: Point;\n    indexInCurrentCombo: number;\n    comboIndex: number;\n}\n\nexport interface RepeatPoint {\n    type: NestedHitObjectType.RepeatPoint;\n    repeatIndex: number;\n    spanDuration: number;\n    startTime: number;\n    position: Point;\n    stackHeight: number;\n    scale: number;\n}\n\nexport interface SpinnerMetadata {\n    endTime: number;\n    soundSamples: string[];\n\n    // Computed\n    stackedPosition: Point;\n}\n","export function assertNever(value: never): never {\n    throw new Error(`Runtime type corruption. Value: ${value}`);\n}\n","export enum ControlPointType {\n    Timing,\n    Difficulty,\n    Effect,\n    LegacySample,\n}\n\nexport type ControlPoint\n    = TimingControlPoint\n    | DifficultyControlPoint\n    | EffectControlPoint\n    | LegacySampleControlPoint\n    ;\n\nexport interface TimingControlPoint {\n    type: ControlPointType.Timing;\n    time: number;\n    beatLength: number;\n    timeSignature: number; // unused\n}\n\nexport interface DifficultyControlPoint {\n    type: ControlPointType.Difficulty;\n    time: number;\n    speedMultiplier: number;\n}\n\nexport interface EffectControlPoint {\n    type: ControlPointType.Effect;\n    time: number;\n    kiaiMode: boolean; // unused\n    omitFirstBarSignature: boolean; // unused\n}\n\nexport interface LegacySampleControlPoint {\n    type: ControlPointType.LegacySample;\n    time: number;\n    sampleSet: number; // unused\n    customSampleBank: number; // unused\n    sampleVolume: number; // unused\n}\n","import { ParsedBeatmap } from \"../types/Beatmap\";\nimport { Clock } from \"../types/Clock\";\nimport { ControlPoint, ControlPointType, DifficultyControlPoint, EffectControlPoint, LegacySampleControlPoint, TimingControlPoint } from \"../types/ControlPoint\";\nimport { HitObjectType, NestedHitObject, NestedHitObjectType, RepeatPoint, Slider, SliderCircle, SliderTailCircle, SliderTick } from \"../types/HitObject\";\nimport { TimingPoint } from \"../types/TimingPoint\";\nimport { assertNever } from \"./assertNever\";\nimport { fillBeatmapDefaults } from \"./beatmap-fill-defaults\";\nimport { GameMod } from \"./mods/GameMod\";\nimport { PartialBeatmap } from \"./parsing/PartialBeatmap\";\nimport { pointSum } from \"./point-arithmetic\";\nimport { isCircle, isSlider, isSliderTip } from \"./type-inference\";\nimport { clamp, isNotNull, sortBy } from \"./utilities\";\n\nexport interface SliderComputedProperties {\n    startTime: number;\n    spanCount: number;\n    pathDistance: number;\n    velocity: number;\n    spanDuration: number;\n    tickDistance: number;\n}\n\nexport interface SliderEvent {\n    type: SliderEventType;\n    spanIndex: number;\n    spanStartTime: number;\n    time: number;\n    pathProgress: number;\n};\n\nexport enum SliderEventType {\n    Head,\n    Tick,\n    Repeat,\n    LegacyLastTick,\n    Tail,\n}\n\nexport function processBeatmap(\n    partialBeatmap: PartialBeatmap,\n    clock: Clock,\n    mods: Set<GameMod> = new Set()\n): ParsedBeatmap {\n    const beatmap = fillBeatmapDefaults(partialBeatmap);\n\n    fillControlPoints(beatmap);\n\n    fillHitObjectsComboData(beatmap);\n\n    fillSliderData(beatmap);\n\n    mods.forEach(mod => mod.applyToDifficulty(beatmap.baseDifficulty));\n\n    preProcessBeatmap(beatmap);\n\n    // TODO: do we need to apply defaults again?\n\n    // TODO: apply mods, if any, to hit objects\n    // https://github.com/ppy/osu/blob/master/osu.Game/Beatmaps/WorkingBeatmap.cs#L114\n\n    postProcessBeatmap(beatmap);\n\n    // TODO: does this need to be here?\n    mods.forEach(mod => mod.applyToClock(clock));\n\n    fillStackedPositions(beatmap);\n\n    return beatmap;\n}\n\nfunction fillControlPoints(beatmap: ParsedBeatmap) {\n    for (const timingPoint of beatmap.timingPoints) {\n        if (timingPoint.timingChange) {\n            beatmap.timingControlPoints.push(createTimingControlPoint(timingPoint));\n        }\n\n        beatmap.difficultyControlPoints.push(createDifficultyControlPoint(timingPoint));\n        beatmap.effectControlPoints.push(createEffectControlPoint(timingPoint));\n        beatmap.legacySampleControlPoints.push(createLegacySampleControlPoint(timingPoint));\n    }\n}\n\nfunction createTimingControlPoint(timingPoint: TimingPoint): TimingControlPoint {\n    return {\n        type: ControlPointType.Timing,\n        time: timingPoint.time,\n        beatLength: timingPoint.beatLength,\n        timeSignature: timingPoint.timeSignature,\n    };\n}\n\nfunction createDifficultyControlPoint(timingPoint: TimingPoint): DifficultyControlPoint {\n    return {\n        type: ControlPointType.Difficulty,\n        time: timingPoint.time,\n        speedMultiplier: timingPoint.speedMultiplier,\n    };\n}\n\nfunction createEffectControlPoint(timingPoint: TimingPoint): EffectControlPoint {\n    return {\n        type: ControlPointType.Effect,\n        time: timingPoint.time,\n        kiaiMode: timingPoint.kiaiMode,\n        omitFirstBarSignature: timingPoint.omitFirstBarSignature,\n    };\n}\n\nfunction createLegacySampleControlPoint(timingPoint: TimingPoint): LegacySampleControlPoint {\n    return {\n        type: ControlPointType.LegacySample,\n        time: timingPoint.time,\n        customSampleBank: timingPoint.customSampleBank,\n        sampleSet: timingPoint.sampleSet,\n        sampleVolume: timingPoint.sampleVolume,\n    };\n}\n\nfunction fillHitObjectsComboData(beatmap: ParsedBeatmap) {\n    let firstObject = true;\n    let forceNewCombo = false;\n    let extraComboOffset = 0;\n\n    for (const hitObject of beatmap.hitObjects) {\n        switch (hitObject.type) {\n            case HitObjectType.Circle:\n            case HitObjectType.Slider:\n                hitObject.newCombo = firstObject || forceNewCombo || hitObject.newCombo;\n                hitObject.comboOffset += extraComboOffset;\n\n                forceNewCombo = false;\n                extraComboOffset = 0;\n                break;\n\n            case HitObjectType.Spinner:\n                forceNewCombo = forceNewCombo || hitObject.newCombo;\n                extraComboOffset += hitObject.comboOffset;\n                break;\n\n            default:\n                return assertNever(hitObject);\n        }\n\n        firstObject = false;\n    }\n}\n\nfunction fillSliderData(beatmap: ParsedBeatmap) {\n    beatmap.hitObjects.filter(isSlider).forEach(slider => {\n        fillSliderMetadata(slider, beatmap);\n        fillNestedHitObjects(slider, beatmap);\n    });\n}\n\nfunction fillSliderMetadata(slider: Slider, beatmap: ParsedBeatmap) {\n    const BASE_SCORING_DISTANCE = 100;\n    const TICK_DISTANCE_MULTIPLIER = 1;\n\n    const { timingControlPoints, difficultyControlPoints, sliderMultiplier } = beatmap;\n    const timingPoint = getTimingControlPoint(timingControlPoints, slider.startTime);\n    const difficultyPoint = getDifficultyControlPoint(difficultyControlPoints, slider.startTime);\n    const scoringDistance = BASE_SCORING_DISTANCE * sliderMultiplier * difficultyPoint.speedMultiplier;\n\n    slider.metadata.timingPoint = timingPoint;\n    slider.metadata.difficultyPoint = difficultyPoint;\n    slider.metadata.velocity = scoringDistance / timingPoint.beatLength;\n    slider.metadata.tickDistance = scoringDistance / beatmap.sliderTickRate * TICK_DISTANCE_MULTIPLIER;\n}\n\nfunction getTimingControlPoint(\n    list: TimingControlPoint[],\n    startTime: number\n): TimingControlPoint {\n    const controlPoint = getControlPoint(list, startTime);\n\n    if (controlPoint === null) {\n        if (list.length > 0) {\n            return list[0];\n        }\n\n        return {\n            type: ControlPointType.Timing,\n            time: 0,\n            beatLength: 1000,\n            timeSignature: 4,\n        };\n    }\n\n    return controlPoint;\n}\n\nfunction getDifficultyControlPoint(\n    list: DifficultyControlPoint[],\n    startTime: number\n): DifficultyControlPoint {\n    const controlPoint = getControlPoint(list, startTime);\n\n    if (controlPoint === null) {\n        return {\n            type: ControlPointType.Difficulty,\n            time: 0,\n            speedMultiplier: 1,\n        };\n    }\n\n    return controlPoint;\n}\n\nfunction getControlPoint<T extends ControlPoint>(list: T[], startTime: number): T | null {\n    const matches = list.filter(t => t.time <= startTime);\n\n    return matches.length > 0\n        ? matches[matches.length - 1]\n        : null;\n}\n\nfunction fillNestedHitObjects(slider: Slider, beatmap: ParsedBeatmap) {\n    const computedProperties = getSliderComputedProperties(slider);\n\n    getSliderEvents(computedProperties)\n        .map(event => createNestedHitObject(slider, event, computedProperties, beatmap))\n        .filter(isNotNull)\n        .forEach(h => slider.metadata.nestedHitObjects.push(h));\n\n    sortBy(slider.metadata.nestedHitObjects, 'startTime');\n}\n\nfunction createNestedHitObject(\n    slider: Slider,\n    event: SliderEvent,\n    computedProperties: SliderComputedProperties,\n    beatmap: ParsedBeatmap,\n): NestedHitObject | null {\n    switch (event.type) {\n        case SliderEventType.Head:\n            return createSliderCircle(slider, event);\n\n        case SliderEventType.Tick:\n            return createSliderTick(slider, event, beatmap);\n\n        case SliderEventType.Repeat:\n            return createRepeatPoint(slider, event, computedProperties, beatmap);\n\n        case SliderEventType.LegacyLastTick:\n            return createSliderTailCircle(slider, event);\n\n        case SliderEventType.Tail:\n            return null;\n\n        default:\n            return assertNever(event.type);\n    }\n}\n\nfunction createSliderCircle(slider: Slider, event: SliderEvent): SliderCircle {\n    const position = { x: slider.x, y: slider.y };\n\n    return {\n        type: NestedHitObjectType.SliderCircle,\n        startTime: event.time,\n        position: position,\n        indexInCurrentCombo: slider.indexInCurrentCombo,\n        comboIndex: slider.comboIndex,\n    };\n}\n\nfunction createSliderTick(slider: Slider, event: SliderEvent, beatmap: ParsedBeatmap): SliderTick {\n    const position = { x: slider.x, y: slider.y };\n    const path = slider.metadata.path;\n\n    return {\n        type: NestedHitObjectType.SliderTick,\n        spanIndex: event.spanIndex,\n        spanStartTime: event.spanStartTime,\n        startTime: event.time,\n        position: pointSum(position, path.positionAt(event.pathProgress)),\n        stackHeight: slider.metadata.stackHeight,\n        scale: getHitObjectScale(beatmap),\n    };\n}\n\nfunction createRepeatPoint(\n    slider: Slider,\n    event: SliderEvent,\n    computedProperties: SliderComputedProperties,\n    beatmap: ParsedBeatmap,\n): RepeatPoint {\n    const spanDuration = computedProperties.spanDuration;\n    const position = { x: slider.x, y: slider.y };\n    const path = slider.metadata.path;\n\n    return {\n        type: NestedHitObjectType.RepeatPoint,\n        repeatIndex: event.spanIndex,\n        spanDuration: spanDuration,\n        startTime: slider.startTime + (event.spanIndex + 1) * spanDuration,\n        position: pointSum(position, path.positionAt(event.pathProgress)),\n        stackHeight: slider.metadata.stackHeight,\n        scale: getHitObjectScale(beatmap),\n    };\n}\n\nfunction createSliderTailCircle(slider: Slider, event: SliderEvent): SliderTailCircle {\n    const position = { x: slider.x, y: slider.y };\n    const path = slider.metadata.path;\n\n    return {\n        type: NestedHitObjectType.SliderTailCircle,\n        startTime: event.time,\n        position: pointSum(position, path.positionAt(1)),\n        indexInCurrentCombo: slider.indexInCurrentCombo,\n        comboIndex: slider.comboIndex,\n    };\n}\n\nexport function getHitObjectScale(beatmap: ParsedBeatmap): number {\n    return 0.85 - 0.07 * beatmap.baseDifficulty.circleSize;\n}\n\nexport function getSliderComputedProperties(slider: Slider): SliderComputedProperties {\n    // SliderEventGenerator.cs (23)\n    const MAX_SLIDER_LENGTH = 100000;\n\n    const startTime = slider.startTime;\n    const spanCount = slider.metadata.repeatCount + 1;\n    const pathDistance = Math.min(slider.metadata.path.length, MAX_SLIDER_LENGTH);\n    const velocity = slider.metadata.velocity;\n    const endTime = startTime + spanCount * pathDistance / velocity;\n    const duration = endTime - startTime;\n    const spanDuration = duration / spanCount;\n    const tickDistance = clamp(slider.metadata.tickDistance, 0, pathDistance);\n\n    return {\n        startTime,\n        spanCount,\n        pathDistance,\n        velocity,\n        spanDuration,\n        tickDistance,\n    };\n}\n\nfunction getSliderEvents(sliderProperties: SliderComputedProperties): SliderEvent[] {\n    const result: SliderEvent[] = [];\n\n    result.push(createSliderEventHead(sliderProperties));\n\n    if (sliderProperties.tickDistance !== 0) {\n        const spanCount = sliderProperties.spanCount;\n\n        for (let span = 0; span < spanCount - 1; span++) {\n            result.push(...createSliderEventTicks(sliderProperties, span));\n            result.push(createSliderEventRepeat(sliderProperties, span));\n        }\n\n        result.push(...createSliderEventTicks(sliderProperties, spanCount - 1));\n    }\n\n    result.push(createSliderEventLegacyLastTick(sliderProperties));\n    result.push(createSliderEventTail(sliderProperties));\n\n    return result;\n}\n\nfunction createSliderEventHead(sliderProperties: SliderComputedProperties): SliderEvent {\n    return {\n        type: SliderEventType.Head,\n        spanIndex: 0,\n        spanStartTime: sliderProperties.startTime,\n        time: sliderProperties.startTime,\n        pathProgress: 0,\n    };\n}\n\nfunction createSliderEventTicks(\n    sliderProperties: SliderComputedProperties,\n    span: number,\n): SliderEvent[] {\n    const { startTime, velocity, tickDistance, spanDuration, pathDistance } = sliderProperties;\n    const minDistanceFromEnd = velocity * 10;\n    const spanStartTime = startTime + span * spanDuration;\n    const reversed = span % 2 === 1;\n    const result: SliderEvent[] = [];\n\n    for (let d = tickDistance; d < pathDistance - minDistanceFromEnd; d += tickDistance) {\n        const pathProgress = d / pathDistance;\n        const timeProgress = reversed ? 1 - pathProgress : pathProgress;\n\n        result.push({\n            type: SliderEventType.Tick,\n            spanIndex: span,\n            spanStartTime: spanStartTime,\n            time: spanStartTime + timeProgress * spanDuration,\n            pathProgress: pathProgress,\n        });\n    }\n\n    return result;\n}\n\nfunction createSliderEventRepeat(\n    sliderProperties: SliderComputedProperties,\n    span: number,\n): SliderEvent {\n    const { startTime, spanDuration } = sliderProperties;\n    const spanStartTime = startTime + span * spanDuration;\n\n    return {\n        type: SliderEventType.Repeat,\n        spanIndex: span,\n        spanStartTime: spanStartTime,\n        time: spanStartTime + spanDuration,\n        pathProgress: (span + 1) % 2,\n    };\n}\n\nfunction createSliderEventLegacyLastTick(sliderProperties: SliderComputedProperties): SliderEvent {\n    const LEGACY_LAST_TICK_OFFSET = 36;\n\n    const { startTime, spanCount, spanDuration } = sliderProperties;\n    const totalDuration = spanCount * spanDuration;\n    const finalSpanIndex = spanCount - 1;\n    const finalSpanStartTime = startTime + finalSpanIndex * spanDuration;\n    const finalSpanEndTime = Math.max(\n        startTime + totalDuration / 2,\n        (finalSpanStartTime + spanDuration) - LEGACY_LAST_TICK_OFFSET\n    );\n    let finalProgress = (finalSpanEndTime - finalSpanStartTime) / spanDuration;\n\n    if (spanCount % 2 === 0) {\n        finalProgress = 1 - finalProgress;\n    }\n\n    return {\n        type: SliderEventType.LegacyLastTick,\n        spanIndex: finalSpanIndex,\n        spanStartTime: finalSpanStartTime,\n        time: finalSpanEndTime,\n        pathProgress: finalProgress,\n    };\n}\n\nfunction createSliderEventTail(sliderProperties: SliderComputedProperties): SliderEvent {\n    const { startTime, spanCount, spanDuration } = sliderProperties;\n    const finalSpanIndex = spanCount - 1;\n    const totalDuration = spanCount * spanDuration;\n\n    return {\n        type: SliderEventType.Tail,\n        spanIndex: finalSpanIndex,\n        spanStartTime: startTime + finalSpanIndex * spanDuration,\n        time: startTime + totalDuration,\n        pathProgress: spanCount % 2,\n    };\n}\n\nfunction preProcessBeatmap(beatmap: ParsedBeatmap) {\n    const [first, ...rest] = beatmap.hitObjects;\n\n    if (first.newCombo) {\n        first.indexInCurrentCombo = 0;\n        first.comboIndex = first.comboOffset + 1;\n    }\n\n    let lastObject = first;\n\n    for (const hitObject of rest) {\n        if (hitObject.newCombo) {\n            hitObject.indexInCurrentCombo = 0;\n            hitObject.comboIndex = lastObject.comboIndex + hitObject.comboOffset + 1;\n            lastObject.lastInCombo = true;\n        } else {\n            hitObject.indexInCurrentCombo = lastObject.indexInCurrentCombo + 1;\n            hitObject.comboIndex = lastObject.comboIndex;\n        }\n\n        lastObject = hitObject;\n    }\n}\n\nfunction postProcessBeatmap(beatmap: ParsedBeatmap) {\n    beatmap.hitObjects.filter(isSlider).forEach(slider => {\n        slider.metadata.nestedHitObjects.filter(isSliderTip).forEach(nested => {\n            nested.comboIndex = slider.comboIndex;\n            nested.indexInCurrentCombo = slider.indexInCurrentCombo;\n        });\n    });\n\n    // TODO: apply stacking\n    // https://github.com/ppy/osu/blob/master/osu.Game.Rulesets.Osu/Beatmaps/OsuBeatmapProcessor.cs#L14\n}\n\nfunction fillStackedPositions(beatmap: ParsedBeatmap) {\n    const hitObjectScale = getHitObjectScale(beatmap);\n\n    for (const hitObject of beatmap.hitObjects) {\n        const stackHeight = (isCircle(hitObject) || isSlider(hitObject))\n            ? hitObject.metadata.stackHeight\n            : 0;\n\n        const stackOffset = stackHeight * hitObjectScale * -6.4;\n\n        hitObject.metadata.stackedPosition = {\n            x: hitObject.x + stackOffset,\n            y: hitObject.y + stackOffset,\n        };\n    }\n}\n","import { CSSProperties } from 'react';\nimport { StyleMap } from '../types/StyleMap';\n\nexport function merge(...styles: (CSSProperties | boolean | undefined)[]): CSSProperties {\n    const result: CSSProperties = {};\n\n    for (const style of styles) {\n        if (style) {\n            Object.assign(result, style);\n        }\n    }\n\n    return result;\n}\n\nexport function range(min: number, max: number, step: number = 1): number[] {\n    const result = [];\n\n    for (let i = min; i < max; i += step) {\n        result.push(i);\n    }\n\n    return result;\n}\n\n// type KeysToNumber<T> = ({ [K in keyof T]: T[K] extends number ? K : never })[keyof T];\n\n// export function sortBy<T, K extends KeysToNumber<T>>(list: T[], field: K) {\n//     (list as any[]).sort((a, b) => a[field] - b[field]);\n// }\n\nexport function sortBy<T extends string>(list: Record<T, number>[], field: T) {\n    return list.sort((a, b) => a[field] - b[field]);\n}\n\nexport function clamp(value: number, min: number, max: number) {\n    return Math.max(min, Math.min(max, value));\n}\n\nexport function round(value: number, decimalPlaces: number): string {\n    const exponent = Math.pow(10, decimalPlaces);\n\n    return (Math.round(value * exponent) / exponent).toString();\n}\n\nexport function coalesce<T, U>(value: T | undefined, fallback: U): T | U {\n    if (value === undefined) {\n        return fallback;\n    }\n\n    return value;\n}\n\nexport function getListMode(list: number[]): number {\n    type Table = { [value: number]: number };\n\n    const valueFrequencies = list\n        .reduce((table, value) => {\n            table[value] = (table[value] || 0) + 1;\n            return table;\n        }, {} as Table);\n\n    return parseFloat(\n        Object.entries(valueFrequencies)\n            .sort(([v1, count1], [v2, count2]) => count2 - count1)\n            .map(([v, _]) => v)[0]\n    );\n}\n\nexport function hasFlag<T extends number>(enumValue: T, flag: T): boolean {\n    return (enumValue & flag) > 0;\n}\n\nexport function isNotNull<T>(value: T | null): value is T {\n    return value !== null;\n}\n\n// A \"type trick\" to ensure that the property values are valid CSS values,\n// without losing autocomplete on the defined keys.\nexport function createStyleSheet<T extends StyleMap>(styles: T): T {\n    return styles;\n}\n","import { Point } from '../types/Point';\n\nexport function pointSum(a: Point, b: Point): Point {\n    return {\n        x: a.x + b.x,\n        y: a.y + b.y,\n    };\n}\n\nexport function pointSubtract(a: Point, b: Point): Point {\n    return {\n        x: a.x - b.x,\n        y: a.y - b.y,\n    };\n}\n\nexport function pointMultiply(point: Point, scalar: number): Point {\n    return {\n        x: point.x * scalar,\n        y: point.y * scalar,\n    };\n}\n\nexport function pointDivide(point: Point, scalar: number): Point {\n    return {\n        x: point.x / scalar,\n        y: point.y / scalar,\n    };\n}\n\nexport function operate(point: Point) {\n    return {\n        sum: (other: Point) => operate(pointSum(point, other)),\n        subtract: (other: Point) => operate(pointSubtract(point, other)),\n        multiply: (scalar: number) => operate(pointMultiply(point, scalar)),\n        divide: (scalar: number) => operate(pointDivide(point, scalar)),\n        get: () => point,\n    };\n}\n\nexport function getNorm(point: Point): number {\n    return Math.sqrt(getSquaredNorm(point));\n}\n\nexport function getSquaredNorm(point: Point): number {\n    return point.x * point.x + point.y * point.y;\n}\n\nexport function dotProduct(a: Point, b: Point): number {\n    return a.x * b.x + a.y * b.y;\n}\n\nexport function getMidPoint(a: Point, b: Point): Point {\n    return {\n        x: (a.x + b.x) / 2,\n        y: (a.y + b.y) / 2,\n    };\n}\n\nexport function isSamePoint(a: Point, b: Point): boolean {\n    return a.x === b.x && a.y === b.y;\n}\n\nexport function pointNormalize(point: Point) {\n    const norm = getNorm(point);\n    point.x /= norm;\n    point.y /= norm;\n}\n","import { Circle, HitObject, HitObjectType, NestedHitObject, NestedHitObjectType, Slider, SliderCircle, SliderTailCircle, SliderTip, Spinner } from \"../types/HitObject\";\n\nexport function isCircle(hitObject: HitObject): hitObject is Circle {\n    return hitObject.type === HitObjectType.Circle;\n}\n\nexport function isSlider(hitObject: HitObject): hitObject is Slider {\n    return hitObject.type === HitObjectType.Slider;\n}\n\nexport function isSpinner(hitObject: HitObject): hitObject is Spinner {\n    return hitObject.type === HitObjectType.Spinner;\n}\n\n\nexport function isSliderTip(hitObject: NestedHitObject): hitObject is SliderTip {\n    return isSliderCircle(hitObject) || isSliderTailCircle(hitObject);\n}\n\nexport function isSliderCircle(hitObject: NestedHitObject): hitObject is SliderCircle {\n    return hitObject.type === NestedHitObjectType.SliderCircle;\n}\n\nexport function isSliderTailCircle(hitObject: NestedHitObject): hitObject is SliderTailCircle {\n    return hitObject.type === NestedHitObjectType.SliderTailCircle;\n}\n","import { ParsedBeatmap } from '../types/Beatmap';\nimport { BaseHitObject, Circle, CircleMetadata, HitObject, HitObjectType, Slider, SliderMetadata, Spinner, SpinnerMetadata } from '../types/HitObject';\nimport { Point } from '../types/Point';\nimport { assertNever } from './assertNever';\nimport { PartialBeatmap } from './parsing/PartialBeatmap';\nimport { PartialCircle, PartialCircleMetadata, PartialHitObject, PartialSlider, PartialSliderMetadata, PartialSpinner, PartialSpinnerMetadata } from './parsing/PartialHitObject';\nimport { coalesce } from './utilities';\n\nexport function fillBeatmapDefaults(partialBeatmap: PartialBeatmap): ParsedBeatmap {\n    const baseDifficulty = {\n        hpDrainRate: coalesce(partialBeatmap.baseDifficulty.hpDrainRate, 5),\n        circleSize: coalesce(partialBeatmap.baseDifficulty.circleSize, 5),\n        overallDifficulty: coalesce(partialBeatmap.baseDifficulty.overallDifficulty, 5),\n        approachRate: coalesce(partialBeatmap.baseDifficulty.approachRate, 5),\n    };\n\n    return {\n        // General\n        audioFilename: partialBeatmap.audioFilename || '',\n        audioLeadIn: partialBeatmap.audioLeadIn || 0,\n        previewTime: partialBeatmap.previewTime || 0,\n        countdown: partialBeatmap.countdown || 0,\n        stackLeniency: partialBeatmap.stackLeniency || 0,\n        mode: partialBeatmap.mode || 0,\n\n        // Editor\n        distanceSpacing: partialBeatmap.distanceSpacing || 0,\n        beatDivisor: partialBeatmap.beatDivisor || 0,\n        gridSize: partialBeatmap.gridSize || 0,\n\n        // Metadata\n        title: partialBeatmap.title || '',\n        titleUnicode: partialBeatmap.titleUnicode,\n        artist: partialBeatmap.artist || '',\n        artistUnicode: partialBeatmap.artistUnicode,\n        creator: partialBeatmap.creator || '',\n        version: partialBeatmap.version || '',\n        source: partialBeatmap.source,\n        tags: partialBeatmap.tags,\n        beatmapId: partialBeatmap.beatmapId,\n        beatmapSetId: partialBeatmap.beatmapSetId,\n\n        // Difficulty\n        baseDifficulty: baseDifficulty,\n        originalBaseDifficulty: { ...baseDifficulty },\n        sliderMultiplier: partialBeatmap.sliderMultiplier || 0,\n        sliderTickRate: partialBeatmap.sliderTickRate || 0,\n\n        timingPoints: partialBeatmap.timingPoints,\n        timingControlPoints: partialBeatmap.timingControlPoints,\n        difficultyControlPoints: partialBeatmap.difficultyControlPoints,\n        effectControlPoints: partialBeatmap.effectControlPoints,\n        legacySampleControlPoints: partialBeatmap.legacySampleControlPoints,\n        colors: partialBeatmap.colors,\n        hitObjects: createHitObjects(partialBeatmap.hitObjects),\n    };\n}\n\nfunction createHitObjects(partialHitObjects: PartialHitObject[]): HitObject[] {\n    return partialHitObjects.map(h => createHitObject(h));\n}\n\nfunction createHitObject(partialHitObject: PartialHitObject): HitObject {\n    const baseHitObject = createBaseHitObject(partialHitObject);\n\n    switch (partialHitObject.type) {\n        case HitObjectType.Circle:\n            return createCircle(partialHitObject, baseHitObject);\n\n        case HitObjectType.Slider:\n            return createSlider(partialHitObject, baseHitObject);\n\n        case HitObjectType.Spinner:\n            return createSpinner(partialHitObject, baseHitObject);\n\n        default:\n            return assertNever(partialHitObject);\n    }\n}\n\nfunction createBaseHitObject(partialHitObject: PartialHitObject): BaseHitObject {\n    return {\n        x: partialHitObject.x,\n        y: partialHitObject.y,\n        startTime: partialHitObject.startTime,\n        newCombo: partialHitObject.newCombo,\n        comboOffset: partialHitObject.comboOffset,\n        soundType: partialHitObject.soundType,\n        indexInCurrentCombo: 0,\n        comboIndex: 0,\n        lastInCombo: false,\n    };\n}\n\nfunction createCircle(partialHitObject: PartialCircle, base: BaseHitObject): Circle {\n    return {\n        ...base,\n        type: partialHitObject.type,\n        metadata: createCircleMetadata(partialHitObject.metadata),\n    };\n}\n\nfunction createCircleMetadata(metadata: PartialCircleMetadata): CircleMetadata {\n    return {\n        soundSamples: metadata.soundSamples,\n        stackHeight: 0,\n        stackedPosition: {} as Point, // TODO\n    };\n}\n\nfunction createSlider(partialHitObject: PartialSlider, base: BaseHitObject): Slider {\n    return {\n        ...base,\n        type: partialHitObject.type,\n        metadata: createSliderMetadata(partialHitObject.metadata, base),\n    };\n}\n\nfunction createSliderMetadata(\n    metadata: PartialSliderMetadata,\n    baseHitObject: BaseHitObject\n): SliderMetadata {\n    return {\n        path: metadata.path,\n        repeatCount: metadata.repeatCount,\n        soundSamples: metadata.soundSamples,\n        timingPoint: null,\n        difficultyPoint: null,\n        velocity: 0,\n        tickDistance: 0,\n        nestedHitObjects: [],\n        stackHeight: 0,\n        stackedPosition: {} as Point, // TODO\n    };\n}\n\nfunction createSpinner(partialHitObject: PartialSpinner, base: BaseHitObject): Spinner {\n    return {\n        ...base,\n        type: partialHitObject.type,\n        metadata: createSpinnerMetadata(partialHitObject.metadata, base),\n    };\n}\n\nfunction createSpinnerMetadata(\n    metadata: PartialSpinnerMetadata,\n    baseHitObject: BaseHitObject\n): SpinnerMetadata {\n    return {\n        endTime: metadata.endTime,\n        soundSamples: metadata.soundSamples,\n        stackedPosition: {} as Point, // TODO\n    };\n}\n","import { DifficultyHitObject } from '../../types/DifficultyHitObject';\n\nexport abstract class Skill {\n    // The peak strain for each section of the beatmap.\n    private strainPeaks: number[] = [];\n\n    // Strain values are multiplied by this number for the given skill.\n    // Used to balance the value of different skills between each other.\n    protected abstract skillMultiplier: number;\n\n    /// Determines how quickly strain decays for the given skill.\n    /// For example a value of 0.15 indicates that strain decays to 15% of\n    // its original value in one second.\n    protected abstract strainDecayBase: number;\n\n    // The weight by which each strain value decays.\n    protected decayWeight: number = 0.9;\n\n    // DifficultyHitObjects that were processed previously. They can\n    // affect the strain values of the following objects.\n    protected previous: DifficultyHitObject[] = [];\n\n    // Strain level throughout the beatmap.\n    private currentStrain = 1;\n    // Peak strain level in the current section.\n    private currentSectionPeak = 1;\n\n    // Processes a DifficultyHitObject and update current strain values accordingly.\n    process(current: DifficultyHitObject) {\n        this.currentStrain *= this.strainDecay(current.deltaTime);\n        this.currentStrain += this.strainValueOf(current) * this.skillMultiplier;\n\n        this.currentSectionPeak = Math.max(this.currentStrain, this.currentSectionPeak);\n\n        this.previous.push(current);\n    }\n\n    // Saves the current peak strain level to the list of strain peaks,\n    // which will be used to calculate an overall difficulty.\n    saveCurrentPeak() {\n        if (this.previous.length > 0) {\n            this.strainPeaks.push(this.currentSectionPeak);\n        }\n    }\n\n    // Sets the initial strain level for a new section.\n    startNewSectionFrom(offset: number) {\n        if (this.previous.length > 0) {\n            const previousObject = this.previous[this.previous.length - 1].current;\n            const decayedStrain = this.strainDecay(offset - previousObject.startTime);\n            this.currentSectionPeak = this.currentStrain * decayedStrain;\n        }\n    }\n\n    // Returns the calculated difficulty value representing all processed\n    // DifficultyHitObjects.\n    difficultyValue(): number {\n        this.strainPeaks.sort((a, b) => b - a);\n\n        let difficulty = 0;\n        let weight = 1;\n\n        // Difficulty is the weighted sum of the highest strains from every section.\n        for (const strain of this.strainPeaks) {\n            difficulty += strain * weight;\n            weight *= this.decayWeight;\n        }\n\n        return difficulty;\n    }\n\n    // Calculates the strain value of a DifficultyHitObject. This value is\n    // affected by previously processed objects.\n    protected abstract strainValueOf(current: DifficultyHitObject): number;\n\n    private strainDecay(ms: number) {\n        return Math.pow(this.strainDecayBase, ms / 1000);\n    }\n}\n","import { DifficultyHitObject } from '../../types/DifficultyHitObject';\nimport { isSpinner } from '../type-inference';\nimport { Skill } from './Skill';\n\nexport class Aim extends Skill {\n    private readonly ANGLE_BONUS_BEGIN = Math.PI / 3;\n    private readonly TIMING_THRESHOLD = 107;\n\n    // override\n    protected skillMultiplier: number = 26.25;\n    // override\n    protected strainDecayBase: number = 0.15;\n\n    // override\n    protected strainValueOf(object: DifficultyHitObject): number{\n        if (isSpinner(object.current)) {\n            return 0;\n        }\n\n        let result = 0;\n\n        if (this.previous.length > 0) {\n            const previousObject = this.previous[this.previous.length - 1];\n\n            if (object.angle !== null && object.angle > this.ANGLE_BONUS_BEGIN) {\n                const scale = 90;\n\n                const angleBonus = Math.sqrt(\n                    Math.max(previousObject.jumpDistance - scale, 0)\n                    * Math.pow(Math.sin(object.angle - this.ANGLE_BONUS_BEGIN), 2)\n                    * Math.max(object.jumpDistance - scale, 0)\n                );\n                result = 1.5 * this.applyDiminishingExp(Math.max(0, angleBonus)) / Math.max(this.TIMING_THRESHOLD, previousObject.strainTime);\n            }\n        }\n\n        const jumpDistanceExp = this.applyDiminishingExp(object.jumpDistance);\n        const travelDistanceExp = this.applyDiminishingExp(object.travelDistance);\n\n        return Math.max(\n            result + (jumpDistanceExp + travelDistanceExp + Math.sqrt(travelDistanceExp * jumpDistanceExp)) / Math.max(object.strainTime, this.TIMING_THRESHOLD),\n            (Math.sqrt(travelDistanceExp * jumpDistanceExp) + jumpDistanceExp + travelDistanceExp) / object.strainTime\n        );\n    }\n\n    private applyDiminishingExp(value: number): number {\n        return Math.pow(value, 0.99);\n    }\n}\n","import { DifficultyHitObject } from '../../types/DifficultyHitObject';\nimport { isSpinner } from '../type-inference';\nimport { Skill } from './Skill';\n\nexport class Speed extends Skill {\n    private readonly SINGLE_SPACING_THRESHOLD = 125;\n\n    private readonly ANGLE_BONUS_BEGIN = 5 * Math.PI / 6;\n    private readonly PI_OVER_4 = Math.PI / 4;\n    private readonly PI_OVER_2 = Math.PI / 2;\n\n    // override\n    protected skillMultiplier: number = 1400;\n    // override\n    protected strainDecayBase: number = 0.3;\n\n    private readonly MIN_SPEED_BONUS = 75; // ~200BPM\n    private readonly MAX_SPEED_BONUS = 45; // ~330BPM\n    private readonly SPEED_BALANCING_FACTOR = 40;\n\n    // override\n    protected strainValueOf(object: DifficultyHitObject): number {\n        if (isSpinner(object.current)) {\n            return 0;\n        }\n\n        const distance = Math.min(this.SINGLE_SPACING_THRESHOLD, object.travelDistance + object.jumpDistance);\n        const deltaTime = Math.max(this.MAX_SPEED_BONUS, object.deltaTime);\n\n        let speedBonus = 1.0;\n        if (deltaTime < this.MIN_SPEED_BONUS) {\n            speedBonus = 1 + Math.pow((this.MIN_SPEED_BONUS - deltaTime) / this.SPEED_BALANCING_FACTOR, 2);\n        }\n\n        let angleBonus = 1.0;\n\n        if (object.angle !== null && object.angle < this.ANGLE_BONUS_BEGIN) {\n            angleBonus = 1 + Math.pow(Math.sin(1.5 * (this.ANGLE_BONUS_BEGIN - object.angle)), 2) / 3.57;\n\n            if (object.angle < this.PI_OVER_2) {\n                angleBonus = 1.28;\n                if (distance < 90 && object.angle < this.PI_OVER_4) {\n                    angleBonus += (1 - angleBonus) * Math.min((90 - distance) / 10, 1);\n                } else if (distance < 90) {\n                    angleBonus += (1 - angleBonus) * Math.min((90 - distance) / 10, 1) * Math.sin((this.PI_OVER_2 - object.angle) / this.PI_OVER_4);\n                }\n            }\n        }\n\n        return (1 + (speedBonus - 1) * 0.75) * angleBonus * (0.95 + speedBonus * Math.pow(distance / this.SINGLE_SPACING_THRESHOLD, 3.5)) / object.strainTime;\n    }\n\n}\n","import { ApproachRateData, Beatmap, DerivedDifficultyAttributes, OverallDifficultyData, ParsedBeatmap } from '../types/Beatmap';\nimport { Clock } from '../types/Clock';\nimport { DifficultyHitObject } from '../types/DifficultyHitObject';\nimport { HitObject, HitObjectType, NestedHitObject, Slider } from '../types/HitObject';\nimport { Point } from '../types/Point';\nimport { assertNever } from './assertNever';\nimport { getHitObjectScale, getSliderComputedProperties, SliderComputedProperties } from './beatmap-processing';\nimport { dotProduct, getNorm, operate, pointMultiply, pointNormalize, pointSubtract, pointSum } from './point-arithmetic';\nimport { Aim } from './skills/Aim';\nimport { Skill } from './skills/Skill';\nimport { Speed } from './skills/Speed';\nimport { isSlider } from './type-inference';\nimport { clamp, range } from './utilities';\n\n// https://github.com/ppy/osu/blob/master/osu.Game.Rulesets.Osu/Beatmaps/OsuBeatmapProcessor.cs#L14\nconst STACK_DISTANCE = 3;\n\n// HitObject.cs (25)\nconst CONTROL_POINT_LENIENCY = 1;\n\nexport function fillBeatmapComputedAttributes(\n    beatmap: ParsedBeatmap,\n    clock: Readonly<Clock>,\n): Beatmap {\n    const difficultyHitObjects = createDifficultyHitObjects(beatmap, clock);\n\n    const calculatedDifficultyAttributes = calculate(difficultyHitObjects, beatmap, clock);\n\n    if (calculatedDifficultyAttributes === null) {\n        throw new Error('Beatmap too small');\n    }\n\n    return {\n        ...beatmap,\n        derivedDifficulty: calculatedDifficultyAttributes,\n        difficultyHitObjects,\n    };\n}\n\nfunction createDifficultyHitObjects(\n    beatmap: ParsedBeatmap,\n    clock: Readonly<Clock>\n): DifficultyHitObject[] {\n    const hitObjectRadius = getHitObjectRadius(beatmap);\n    const scalingFactor = getScalingFactor(hitObjectRadius);\n\n    return range(1, beatmap.hitObjects.length)\n        .map(i => {\n            const lastLast = i > 1 ? beatmap.hitObjects[i - 2] : null;\n            const last = beatmap.hitObjects[i - 1];\n            const current = beatmap.hitObjects[i];\n\n            return createDifficultyHitObject(\n                lastLast,\n                last,\n                current,\n                beatmap,\n                scalingFactor,\n                clock,\n            );\n        })\n        .sort((a, b) => a.current.startTime - b.current.startTime);\n}\n\nfunction createDifficultyHitObject(\n    lastLast: HitObject | null,\n    last: HitObject,\n    current: HitObject,\n    beatmap: ParsedBeatmap,\n    scalingFactor: number,\n    clock: Readonly<Clock>,\n): DifficultyHitObject {\n    const deltaTime = (current.startTime - last.startTime) / clock.rate;\n    const strainTime = Math.max(50, deltaTime);\n\n    const lastTraversalData = getHitObjectTraversalData(last, beatmap);\n    const travelDistance = lastTraversalData.lazyTravelDistance * scalingFactor;\n    const lastCursorPosition = lastTraversalData.lazyEndPosition;\n    const jumpDistance = scalingFactor * getNorm(\n        pointSubtract(current.metadata.stackedPosition, lastCursorPosition)\n    );\n\n    const angle = (lastLast === null)\n        ? null\n        : getAngle(lastLast, last, current, lastCursorPosition, beatmap);\n\n    return {\n        lastLast,\n        last,\n        current,\n        deltaTime,\n        strainTime,\n        travelDistance,\n        jumpDistance,\n        angle,\n    };\n}\n\nfunction getAngle(\n    lastLast: HitObject,\n    last: HitObject,\n    current: HitObject,\n    lastCursorPosition: Point,\n    beatmap: ParsedBeatmap,\n): number {\n    const lastLastTraversalData = getHitObjectTraversalData(lastLast, beatmap);\n    const lastLastCursorPosition = lastLastTraversalData.lazyEndPosition;\n\n    const v1 = pointSubtract(lastLastCursorPosition, last.metadata.stackedPosition);\n    const v2 = pointSubtract(current.metadata.stackedPosition, lastCursorPosition);\n\n    const dot = dotProduct(v1, v2);\n    const det = v1.x * v2.y - v1.y * v2.x;\n\n    return Math.abs(Math.atan2(det, dot));\n}\n\nfunction getHitObjectTraversalData(hitObject: HitObject, beatmap: ParsedBeatmap): SliderTraversalData {\n    switch (hitObject.type) {\n        case HitObjectType.Circle:\n            return {\n                lazyEndPosition: hitObject.metadata.stackedPosition,\n                lazyTravelDistance: 0,\n            };\n\n        case HitObjectType.Slider:\n            return getSliderTraversalData(hitObject, beatmap);\n\n        case HitObjectType.Spinner:\n            return {\n                lazyEndPosition: { x: 0, y: 0 },\n                lazyTravelDistance: 0,\n            };\n\n        default:\n            return assertNever(hitObject);\n    }\n}\n\nfunction getHitObjectRadius(beatmap: ParsedBeatmap): number {\n    const OBJECT_RADIUS = 64;\n    return OBJECT_RADIUS * getHitObjectScale(beatmap);\n}\n\nfunction getScalingFactor(hitObjectRadius: number): number {\n    const NORMALIZED_RADIUS = 52;\n    const scalingFactor = NORMALIZED_RADIUS / hitObjectRadius;\n\n    if (hitObjectRadius < 30) {\n        const smallCircleBonus = Math.min(30 - hitObjectRadius, 5) / 50;\n        return scalingFactor * (1 + smallCircleBonus);\n    }\n\n    return scalingFactor;\n}\n\ninterface SliderTraversalData {\n    lazyEndPosition: Point;\n    lazyTravelDistance: number;\n}\n\nfunction getSliderTraversalData(slider: Slider, beatmap: ParsedBeatmap): SliderTraversalData {\n    let lazyEndPosition = slider.metadata.stackedPosition;\n    let lazyTravelDistance = 0;\n\n    const approxFollowCircleRadius = getHitObjectRadius(beatmap) * 3;\n    const computedProperties = getSliderComputedProperties(slider);\n\n    slider.metadata.nestedHitObjects.slice(1).forEach(nested => {\n        const progress = getNestedHitObjectProgress(nested, computedProperties);\n        const pathPosition = slider.metadata.path.positionAt(progress);\n\n        const diff = operate(slider.metadata.stackedPosition)\n            .sum(pathPosition)\n            .subtract(lazyEndPosition)\n            .get();\n\n        let dist = getNorm(diff);\n\n        if (dist > approxFollowCircleRadius) {\n            pointNormalize(diff);\n            dist -= approxFollowCircleRadius;\n            lazyEndPosition = pointSum(lazyEndPosition, pointMultiply(diff, dist));\n            lazyTravelDistance += dist;\n        }\n    });\n\n    return { lazyEndPosition, lazyTravelDistance };\n}\n\nfunction getNestedHitObjectProgress(\n    nestedHitObject: NestedHitObject,\n    sliderProperties: SliderComputedProperties,\n): number {\n    const { startTime, spanDuration } = sliderProperties;\n    const progress = (nestedHitObject.startTime - startTime) / spanDuration;\n\n    if (progress % 2 >= 1) {\n        return 1 - progress % 1;\n    } else {\n        return progress % 1;\n    }\n}\n\nfunction calculate(\n    difficultyHitObjects: DifficultyHitObject[],\n    beatmap: ParsedBeatmap,\n    clock: Readonly<Clock>,\n): DerivedDifficultyAttributes | null {\n    const BASE_SECTION_LENGTH = 400;\n    const sectionLength = BASE_SECTION_LENGTH * clock.rate;\n\n    let currentSectionEnd = Math.ceil(beatmap.hitObjects[0].startTime / sectionLength) * sectionLength;\n\n   const skills: Skill[] = [new Aim(), new Speed()];\n\n    for (const object of difficultyHitObjects) {\n        while (object.current.startTime > currentSectionEnd) {\n            for (const skill of skills) {\n                skill.saveCurrentPeak();\n                skill.startNewSectionFrom(currentSectionEnd);\n            }\n\n            currentSectionEnd += sectionLength;\n        }\n\n        for (const skill of skills) {\n            skill.process(object);\n        }\n    }\n\n    for (const skill of skills) {\n        skill.saveCurrentPeak();\n    }\n\n    return createDifficultyAttributes(skills, beatmap, clock);\n}\n\nfunction createDifficultyAttributes(\n    skills: Skill[],\n    beatmap: ParsedBeatmap,\n    clock: Readonly<Clock>,\n): DerivedDifficultyAttributes | null {\n    if (beatmap.hitObjects.length === 0) {\n        return null;\n    }\n\n    const DIFFICULTY_MULTIPLIER = 0.0675;\n\n    const [aim, speed] = skills;\n    const aimStrain = Math.sqrt(aim.difficultyValue()) * DIFFICULTY_MULTIPLIER;\n    const speedStrain = Math.sqrt(speed.difficultyValue()) * DIFFICULTY_MULTIPLIER;\n    const starRating = aimStrain + speedStrain + Math.abs(aimStrain - speedStrain) / 2;\n    // const starRating = Math.max(aimStrain, speedStrain) + (aimStrain + speedStrain) / 2;\n\n    const maxCombo = getMaxCombo(beatmap);\n    const approachRate = getNewApproachRate(beatmap, clock);\n    const overallDifficulty = getNewOverallDifficulty(beatmap, clock);\n\n    return {\n        aimStrain,\n        speedStrain,\n        starRating,\n        maxCombo,\n        approachRate,\n        overallDifficulty,\n    };\n}\n\nfunction getMaxCombo(beatmap: ParsedBeatmap): number {\n    let result = beatmap.hitObjects.length;\n\n    for (const hitObject of beatmap.hitObjects) {\n        if (isSlider(hitObject)) {\n            result += hitObject.metadata.nestedHitObjects.length - 1;\n        }\n    }\n\n    return result;\n}\n\nfunction getNewApproachRate(beatmap: ParsedBeatmap, clock: Readonly<Clock>): ApproachRateData {\n    const AR0_MS = 1800;\n    const AR5_MS = 1200;\n    const AR10_MS = 450;\n    const AR_MS_STEP1 = 120;\n    const AR_MS_STEP2 = 150;\n\n    const originalAR = beatmap.baseDifficulty.approachRate;\n    const baseToleranceMS = (originalAR <= 5)\n        ? (AR0_MS - AR_MS_STEP1 * originalAR)\n        : (AR5_MS - AR_MS_STEP2 * (originalAR - 5));\n    const toleranceMS = clamp(baseToleranceMS, AR10_MS, AR0_MS) / clock.rate;\n\n    const newAR = toleranceMS > AR5_MS\n        ? (AR0_MS - toleranceMS) / AR_MS_STEP1\n        : 5 + (AR5_MS - toleranceMS) / AR_MS_STEP2;\n\n    return {\n        value: newAR,\n        toleranceMS,\n    };\n}\n\nfunction getNewOverallDifficulty(beatmap: ParsedBeatmap, clock: Readonly<Clock>): OverallDifficultyData {\n    const OD0_MS = 80;\n    const OD10_MS = 20;\n    const OD_MS_STEP = 6;\n\n    const originalOD = beatmap.baseDifficulty.overallDifficulty;\n    const toleranceMS = clamp(\n        OD0_MS - Math.ceil(OD_MS_STEP * originalOD),\n        OD10_MS,\n        OD0_MS,\n    ) / clock.rate;\n\n    const newOD = (OD0_MS - toleranceMS) / OD_MS_STEP;\n\n    return {\n        value: newOD,\n        toleranceMS,\n    };\n}\n","export enum Mod {\n    Easy = 'EZ',\n    HalfTime = 'HT',\n    // Hidden = 'HD',\n    HardRock = 'HR',\n    DoubleTime = 'DT',\n    // Flashlight = 'FL',\n}\n","import { BaseDifficultyAttributes } from '../../types/Beatmap';\nimport { Clock } from '../../types/Clock';\n\nexport abstract class GameMod {\n    applyToClock(clock: Clock) { }\n    applyToDifficulty(difficulty: BaseDifficultyAttributes) { }\n}\n","export enum EffectFlags {\n    None = 0,\n    Kiai = 1,\n    OmitFirstBarLine = 8\n}\n","export enum HitObjectParsingFlags {\n    Circle = 1,\n    Slider = 2,\n    NewCombo = 4,\n    Spinner = 8,\n    ComboOffset = 16 | 32 | 64,\n}\n","export enum PathType {\n    Catmull = 'C',\n    Bezier = 'B',\n    Linear = 'L',\n    PerfectCurve = 'P',\n}\n","import { Clock } from '../../types/Clock';\nimport { GameMod } from './GameMod';\n\nexport class DoubleTimeMod extends GameMod {\n    applyToClock(clock: Clock) {\n        clock.rate *= 1.5;\n    }\n}\n","import { BaseDifficultyAttributes } from '../../types/Beatmap';\nimport { GameMod } from './GameMod';\n\nexport class EasyMod extends GameMod {\n    applyToDifficulty(difficulty: BaseDifficultyAttributes) {\n        const ratio = 0.5;\n        difficulty.hpDrainRate *= ratio;\n        difficulty.circleSize *= ratio;\n        difficulty.overallDifficulty *= ratio;\n        difficulty.approachRate *= ratio;\n    }\n}\n","import { Clock } from '../../types/Clock';\nimport { GameMod } from './GameMod';\n\nexport class HalfTimeMod extends GameMod {\n    applyToClock(clock: Clock) {\n        clock.rate *= 0.75;\n    }\n}\n","import { BaseDifficultyAttributes } from '../../types/Beatmap';\nimport { GameMod } from './GameMod';\n\nexport class HardRockMod extends GameMod {\n    applyToDifficulty(difficulty: BaseDifficultyAttributes) {\n        difficulty.hpDrainRate = Math.min(10, difficulty.hpDrainRate * 1.4);\n        difficulty.circleSize = Math.min(10, difficulty.circleSize * 1.3);\n        difficulty.overallDifficulty = Math.min(10, difficulty.overallDifficulty * 1.4);\n        difficulty.approachRate = Math.min(10, difficulty.approachRate * 1.4);\n    }\n}\n","import { Mod } from '../../types/Mod';\nimport { DoubleTimeMod } from './DoubleTimeMod';\nimport { EasyMod } from './EasyMod';\nimport { GameMod } from './GameMod';\nimport { HalfTimeMod } from './HalfTimeMod';\nimport { HardRockMod } from './HardRockMod';\n\nexport type ModTable = {\n    [M in Mod]: GameMod;\n}\n\nexport const MOD_TABLE: ModTable = {\n    [Mod.Easy]: new EasyMod(),\n    [Mod.HalfTime]: new HalfTimeMod(),\n    [Mod.HardRock]: new HardRockMod(),\n    [Mod.DoubleTime]: new DoubleTimeMod(),\n};\n","import { Point } from '../types/Point';\nimport { dotProduct, getMidPoint, getNorm, getSquaredNorm, operate, pointMultiply, pointSubtract, pointSum } from './point-arithmetic';\n\nconst BEZIER_TOLERANCE = 0.25;\nconst CATMULL_DETAIL = 50;\nconst CIRCULAR_ARC_TOLERANCE = 0.1;\n\nexport function approximateBezier(controlPoints: Point[]): Point[] {\n    const output: Point[] = [];\n    const count = controlPoints.length;\n\n    if (count === 0) {\n        return output;\n    }\n\n    const subdivisionBuffer1: Point[] = [];\n    const subdivisionBuffer2: Point[] = [];\n\n    const toFlatten: Point[][] = [];\n    const freeBuffers: Point[][] = [];\n\n    toFlatten.push(controlPoints);\n\n    const leftChild = subdivisionBuffer2;\n\n    while (toFlatten.length > 0) {\n        const parent = toFlatten.pop()!;\n\n        if (bezierIsFlatEnough(parent)) {\n            bezierApproximate(parent, output, subdivisionBuffer1, subdivisionBuffer2, count);\n            freeBuffers.push(parent);\n            continue;\n        }\n\n        const rightChild = freeBuffers.length > 0 ? freeBuffers.pop()! : [];\n        bezierSubdivide(parent, leftChild, rightChild, subdivisionBuffer1, count);\n\n        for (let i = 0; i < count; i++) {\n            parent[i] = leftChild[i];\n        }\n\n        toFlatten.push(rightChild);\n        toFlatten.push(parent);\n    }\n\n    output.push(controlPoints[count - 1]);\n\n    return output;\n}\n\nfunction bezierIsFlatEnough(controlPoints: Point[]): boolean {\n    for (let i = 1; i < controlPoints.length - 1; i++) {\n        const previous = controlPoints[i - 1];\n        const current = controlPoints[i];\n        const next = controlPoints[i + 1];\n\n        // point = previous - 2 * current + next\n        const point = operate(previous)\n            .subtract(pointMultiply(current, 2))\n            .sum(next)\n            .get();\n\n        if (getSquaredNorm(point) > BEZIER_TOLERANCE * BEZIER_TOLERANCE * 4) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction bezierSubdivide(\n    controlPoints: Point[],\n    left: Point[],\n    right: Point[],\n    subdivisionBuffer: Point[],\n    count: number\n) {\n    const midpoints = subdivisionBuffer;\n\n    for (let i = 0; i < count; i++) {\n        midpoints[i] = controlPoints[i];\n    }\n\n    for (let i = 0; i < count; i++) {\n        left[i] = midpoints[0];\n        right[count - i - 1] = midpoints[count - i - 1];\n\n        for (let j = 0; j < count - i - 1; j++) {\n            midpoints[j] = getMidPoint(midpoints[j], midpoints[j + 1]);\n        }\n    }\n}\n\nfunction bezierApproximate(\n    controlPoints: Point[],\n    output: Point[],\n    subdivisionBuffer1: Point[],\n    subdivisionBuffer2: Point[],\n    count: number\n) {\n    const left = subdivisionBuffer2;\n    const right = subdivisionBuffer1;\n\n    bezierSubdivide(controlPoints, left, right, subdivisionBuffer1, count);\n\n    for (let i = 0; i < count - 1; i++) {\n        left[count + i] = right[i + 1];\n    }\n\n    output.push(controlPoints[0]);\n\n    for (let i = 1; i < count - 1; i++) {\n        const index = 2 * i;\n        const previous = left[index - 1];\n        const current = left[index];\n        const next = left[index + 1];\n\n        // point = 0.25 * (previous + 2 * current + next)\n        const point = operate(previous)\n            .sum(pointMultiply(current, 2))\n            .sum(next)\n            .multiply(0.25)\n            .get();\n\n        output.push(point);\n    }\n}\n\nexport function approximateCatmull(controlPoints: Point[]): Point[] {\n    const result: Point[] = [];\n\n    for (let i = 0; i < controlPoints.length - 1; i++) {\n        const v1 = i > 0 ? controlPoints[i - 1] : controlPoints[i];\n        const v2 = controlPoints[i];\n        const v3 = (i < controlPoints.length - 1)\n            ? controlPoints[i + 1]\n            : operate(v2).multiply(2).subtract(v1).get();\n        const v4 = (i < controlPoints.length - 2)\n            ? controlPoints[i + 2]\n            : operate(v3).multiply(2).subtract(v2).get();\n\n        for (let c = 0; c < CATMULL_DETAIL; c++) {\n            result.push(catmullFindPoint(v1, v2, v3, v4, c / CATMULL_DETAIL));\n            result.push(catmullFindPoint(v1, v2, v3, v4, (c + 1) / CATMULL_DETAIL));\n        }\n    }\n\n    return result;\n}\n\nfunction catmullFindPoint(vec1: Point, vec2: Point, vec3: Point, vec4: Point, t: number): Point {\n    const t2 = t * t;\n    const t3 = t * t2;\n\n    const factor1 = operate(vec1).multiply(-1).sum(vec3).get();\n\n    const factor2 = operate(vec1).multiply(2)\n        .subtract(pointMultiply(vec2, 5))\n        .sum(pointMultiply(vec3, 4))\n        .subtract(vec4)\n        .get();\n\n    const factor3 = operate(vec1).multiply(-1)\n        .sum(pointMultiply(vec2, 3))\n        .subtract(pointMultiply(vec3, 3))\n        .sum(vec4)\n        .get();\n\n    return operate(vec2).multiply(2)\n        .sum(pointMultiply(factor1, t))\n        .sum(pointMultiply(factor2, t2))\n        .sum(pointMultiply(factor3, t3))\n        .multiply(0.5)\n        .get();\n}\n\nexport function approximateCircularArc(controlPoints: Point[]): Point[] | null {\n    const [a, b, c] = controlPoints;\n\n    const aSq = getSquaredNorm(pointSubtract(b, c));\n    const bSq = getSquaredNorm(pointSubtract(a, c));\n    const cSq = getSquaredNorm(pointSubtract(a, b));\n\n    if (aSq < 1e-3 || bSq < 1e-3 || cSq < 1e-3) {\n        return null;\n    }\n\n    const s = aSq * (bSq + cSq - aSq);\n    const t = bSq * (aSq + cSq - bSq);\n    const u = cSq * (aSq + bSq - cSq);\n\n    const sum = s + t + u;\n\n    if (sum < 1e-3) {\n        return null;\n    }\n\n    const centre = operate(a).multiply(s)\n        .sum(pointMultiply(b, t))\n        .sum(pointMultiply(c, u))\n        .divide(sum)\n        .get();\n\n    const dA = pointSubtract(a, centre);\n    const dC = pointSubtract(c, centre);\n\n    const r = getNorm(dA);\n\n    const thetaStart = Math.atan2(dA.y, dA.x);\n    let thetaEnd = Math.atan2(dC.y, dC.x);\n\n    while (thetaEnd < thetaStart) {\n        thetaEnd += 2 * Math.PI;\n    }\n\n    let dir = 1;\n    let thetaRange = thetaEnd - thetaStart;\n\n    let orthoAtoC = pointSubtract(c, a);\n    orthoAtoC = {\n        x: orthoAtoC.y,\n        y: -orthoAtoC.x\n    };\n\n    if (dotProduct(orthoAtoC, pointSubtract(b, a)) < 0) {\n        dir = -dir;\n        thetaRange = 2 * Math.PI - thetaRange;\n    }\n\n    const amountPoints = (2 * r <= CIRCULAR_ARC_TOLERANCE)\n        ? 2\n        : Math.max(2, Math.ceil(thetaRange / (2 * Math.acos(1 - CIRCULAR_ARC_TOLERANCE / r))));\n\n    const output: Point[] = [];\n\n    for (let i = 0; i < amountPoints; i++) {\n        const fract = i / (amountPoints - 1);\n        const theta = thetaStart + dir * fract * thetaRange;\n        const o = {\n            x: r * Math.cos(theta),\n            y: r * Math.sin(theta),\n        };\n        output.push(pointSum(centre, o));\n    }\n\n    return output;\n}\n","import { PathType } from '../types/PathType';\nimport { Point } from '../types/Point';\nimport { assertNever } from './assertNever';\nimport * as PathApproximator from './path-approximation';\nimport { getNorm, isSamePoint, operate, pointSubtract } from './point-arithmetic';\n\nexport class SliderPath {\n    private calculatedPath: Point[] = [];\n    private cumulativeLength: number[] = [];\n\n    constructor(\n        public pathType: PathType,\n        public controlPoints: Point[],\n        public length: number,\n    ) {\n        this.calculatePath();\n        this.calculateCumulativeLength();\n    }\n\n    positionAt(progress: number): Point {\n        const distance = this.progressToDistance(progress);\n        const index = this.indexOfDistance(distance);\n        return this.interpolateVertices(index, distance);\n    }\n\n    private progressToDistance(progress: number): number {\n        return Math.max(0, Math.min(1, progress)) * this.length;\n    }\n\n    private indexOfDistance(distance: number): number {\n        const biggerDistancesIndexes = this.cumulativeLength\n            .map((v, i) => [v, i])\n            .filter(([v, _]) => v > distance - 1e-3)\n            .sort(([a, _i1], [b, _i2]) => a - b)\n            .map(([_, i]) => i);\n\n        return biggerDistancesIndexes.length > 0\n            ? biggerDistancesIndexes[0]\n            : this.cumulativeLength.length;\n    }\n\n    private interpolateVertices(index: number, distance: number): Point {\n        if (this.calculatedPath.length === 0) {\n            return { x: 0, y: 0 };\n        }\n\n        if (index <= 0) {\n            return this.calculatedPath[0];\n        }\n        if (index >= this.calculatedPath.length) {\n            return this.calculatedPath[this.calculatedPath.length - 1];\n        }\n\n        const p0 = this.calculatedPath[index - 1];\n        const p1 = this.calculatedPath[index];\n\n        const d0 = this.cumulativeLength[index - 1];\n        const d1 = this.cumulativeLength[index];\n\n        if (Math.abs(d0 - d1) < 1e-3) {\n            return p0;\n        }\n\n        const w = (distance - d0) / (d1 - d0);\n        return operate(p1)\n            .subtract(p0)\n            .multiply(w)\n            .sum(p0)\n            .get();\n    }\n\n    private calculatePath() {\n        let start = 0;\n\n        for (let i = 0; i < this.controlPoints.length; i++) {\n            const isLastPoint = i === this.controlPoints.length - 1;\n            const currentPoint = this.controlPoints[i];\n            const nextPoint = this.controlPoints[i + 1];\n\n            if (isLastPoint || isSamePoint(currentPoint, nextPoint)) {\n                const cpSpan = this.controlPoints.slice(start, i + 1 - start);\n\n                for (const subPath of this.calculateSubpath(cpSpan)) {\n                    const isFirstPath = this.calculatedPath.length === 0;\n                    const lastPath = this.calculatedPath[this.calculatedPath.length - 1];\n\n                    if (isFirstPath || !isSamePoint(lastPath, subPath)) {\n                        this.calculatedPath.push(subPath);\n                    }\n                }\n\n                start = i + 1;\n            }\n        }\n    }\n\n    private calculateSubpath(subControlPoints: Point[]): Point[] {\n        switch (this.pathType) {\n            case PathType.Catmull:\n                return PathApproximator.approximateCatmull(subControlPoints);\n\n            case PathType.Bezier:\n                return PathApproximator.approximateBezier(subControlPoints);\n\n            case PathType.Linear:\n                return subControlPoints;\n\n            case PathType.PerfectCurve:\n                if (this.controlPoints.length === 3 && subControlPoints.length === 3) {\n                    const subPath = PathApproximator.approximateCircularArc(subControlPoints);\n\n                    if (subPath !== null) {\n                        return subPath;\n                    }\n                }\n\n                return PathApproximator.approximateBezier(subControlPoints);\n\n            default:\n                return assertNever(this.pathType);\n        }\n    }\n\n    private calculateCumulativeLength() {\n        let l = 0;\n\n        this.cumulativeLength.push(l);\n\n        for (let i = 0; i < this.calculatedPath.length - 1; i++) {\n            const diff = pointSubtract(this.calculatedPath[i + 1], this.calculatedPath[i]);\n            let d = getNorm(diff);\n\n            if (this.length - l < d) {\n                this.calculatedPath[i + 1] = operate(diff)\n                    .multiply((this.length - l) / d)\n                    .sum(this.calculatedPath[i])\n                    .get();\n                this.calculatedPath.splice(i + 2, this.calculatedPath.length - 2 - i);\n\n                l = this.length;\n                this.cumulativeLength.push(l);\n                break;\n            }\n\n            l += d;\n            this.cumulativeLength.push(l);\n        }\n\n        if (l < this.length && this.calculatedPath.length > 1) {\n            const diff = pointSubtract(\n                this.calculatedPath[this.calculatedPath.length - 1],\n                this.calculatedPath[this.calculatedPath.length - 2],\n            );\n            let d = getNorm(diff);\n\n            // TODO: investigate\n            if (d <= 0) {\n                return;\n            }\n\n            // this.calculatedPath[this.calculatedPath.Count - 1] += diff * (float)((this.length - l) / d);\n            this.calculatedPath[this.calculatedPath.length - 1] = operate(diff)\n                .multiply((this.length - l) / d)\n                .sum(this.calculatedPath[this.calculatedPath.length - 1])\n                .get();\n            this.cumulativeLength[this.calculatedPath.length - 1] = this.length;\n        }\n    }\n}\n","import { EffectFlags } from '../../types/EffectFlags';\nimport { HitObjectType } from '../../types/HitObject';\nimport { HitObjectParsingFlags } from '../../types/HitObjectParsingFlags';\nimport { PathType } from '../../types/PathType';\nimport { assertNever } from '../assertNever';\nimport { pointSubtract } from '../point-arithmetic';\nimport { SliderPath } from '../SliderPath';\nimport { hasFlag, sortBy } from '../utilities';\nimport { PartialBeatmap } from './PartialBeatmap';\nimport { PartialBaseHitObject, PartialCircleMetadata, PartialHitObject, PartialSliderMetadata, PartialSpinnerMetadata } from './PartialHitObject';\n\nenum BeatmapSection {\n    General = 'General',\n    Editor = 'Editor',\n    Metadata = 'Metadata',\n    Difficulty = 'Difficulty',\n    Events = 'Events',\n    TimingPoints = 'TimingPoints',\n    Colors = 'Colours',\n    HitObjects = 'HitObjects',\n}\n\nconst COMMENT_START = '//';\n\nexport function parseBeatmap(content: string): PartialBeatmap {\n    const beatmap = createPartialBeatmap();\n\n    const lines = content\n        .replace(/\\r\\n/g, '\\n')\n        .split('\\n')\n        .filter(isLineValid);\n\n    parseLinesInto(beatmap, lines);\n\n    sortBy(beatmap.hitObjects, 'startTime');\n    sortBy(beatmap.timingPoints, 'time');\n\n    return beatmap;\n}\n\nfunction createPartialBeatmap(): PartialBeatmap {\n    return {\n        baseDifficulty: {},\n        timingPoints: [],\n        timingControlPoints: [],\n        difficultyControlPoints: [],\n        effectControlPoints: [],\n        legacySampleControlPoints: [],\n        colors: [],\n        hitObjects: [],\n    };\n}\n\nfunction isLineValid(line: string): boolean {\n    line = line.trim();\n\n    return line.length > 0 && !line.startsWith(COMMENT_START);\n}\n\nfunction parseLinesInto(beatmap: PartialBeatmap, lines: string[]) {\n    let currentSection: BeatmapSection | null = null;\n\n    for (const line of lines) {\n        const sectionSearch = line.match(/^\\[([A-Za-z0-9]+)\\]/);\n\n        if (sectionSearch !== null) {\n            currentSection = sectionSearch[1] as BeatmapSection;\n            continue;\n        }\n\n        if (currentSection === null) {\n            console.log('Found a line without a section. Ignoring.', line);\n            continue;\n        }\n\n        parseLine(beatmap, currentSection, line);\n    }\n}\n\nfunction parseLine(beatmap: PartialBeatmap, section: BeatmapSection, line: string) {\n    line = stripComments(line);\n\n    switch (section) {\n        case BeatmapSection.General:\n            parseGeneralLine(beatmap, line);\n            break;\n        case BeatmapSection.Editor:\n            parseEditorLine(beatmap, line);\n            break;\n        case BeatmapSection.Metadata:\n            parseMetadataLine(beatmap, line);\n            break;\n        case BeatmapSection.Difficulty:\n            parseDifficultyLine(beatmap, line);\n            break;\n        case BeatmapSection.Events:\n            // events are currently unused\n            break;\n        case BeatmapSection.TimingPoints:\n            parseTimingPointLine(beatmap, line);\n            break;\n        case BeatmapSection.Colors:\n            parseColorLine(beatmap, line);\n            break;\n        case BeatmapSection.HitObjects:\n            parseHitObjectLine(beatmap, line);\n            break;\n        default:\n    }\n}\n\nfunction stripComments(line: string): string {\n    const commentIndex = line.indexOf(COMMENT_START);\n\n    if (commentIndex >= 0) {\n        return line.substr(0, commentIndex);\n    }\n\n    return line;\n}\n\nfunction parseGeneralLine(beatmap: PartialBeatmap, line: string) {\n    const [key, value] = parseKeyValuePair(line);\n\n    switch (key) {\n        case 'AudioFilename':\n            beatmap.audioFilename = value;\n            break;\n        case 'AudioLeadIn':\n            beatmap.audioLeadIn = parseInt(value);\n            break;\n        case 'PreviewTime':\n            beatmap.previewTime = parseInt(value);\n            break;\n        case 'Countdown':\n            beatmap.countdown = parseInt(value);\n            break;\n        case 'StackLeniency':\n            beatmap.stackLeniency = parseFloat(value);\n            break;\n        case 'Mode':\n            beatmap.mode = parseInt(value);\n            break;\n        default:\n    }\n}\n\nfunction parseEditorLine(beatmap: PartialBeatmap, line: string) {\n    const [key, value] = parseKeyValuePair(line);\n\n    switch (key) {\n        case 'DistanceSpacing':\n            beatmap.distanceSpacing = parseInt(value);\n            break;\n        case 'BeatDivisor':\n            beatmap.beatDivisor = parseInt(value);\n            break;\n        case 'GridSize':\n            beatmap.gridSize = parseInt(value);\n            break;\n        default:\n    }\n}\n\nfunction parseMetadataLine(beatmap: PartialBeatmap, line: string) {\n    const [key, value] = parseKeyValuePair(line);\n\n    switch (key) {\n        case 'Title':\n            beatmap.title = value;\n            break;\n        case 'TitleUnicode':\n            beatmap.titleUnicode = value;\n            break;\n        case 'Artist':\n            beatmap.artist = value;\n            break;\n        case 'ArtistUnicode':\n            beatmap.artistUnicode = value;\n            break;\n        case 'Creator':\n            beatmap.creator = value;\n            break;\n        case 'Version':\n            beatmap.version = value;\n            break;\n        case 'Source':\n            beatmap.source = value;\n            break;\n        case 'Tags':\n            beatmap.tags = value.split(' ');\n            break;\n        case 'BeatmapID':\n            beatmap.beatmapId = parseInt(value);\n            break;\n        case 'BeatmapSetID':\n            beatmap.beatmapSetId = parseInt(value);\n            break;\n        default:\n    }\n}\n\nfunction parseDifficultyLine(beatmap: PartialBeatmap, line: string) {\n    const [key, value] = parseKeyValuePair(line);\n\n    switch (key) {\n        case 'HPDrainRate':\n            beatmap.baseDifficulty.hpDrainRate = parseFloat(value);\n            break;\n        case 'CircleSize':\n            beatmap.baseDifficulty.circleSize = parseFloat(value);\n            break;\n        case 'OverallDifficulty':\n            beatmap.baseDifficulty.overallDifficulty = parseFloat(value);\n            break;\n        case 'ApproachRate':\n            beatmap.baseDifficulty.approachRate = parseFloat(value);\n            break;\n        case 'SliderMultiplier':\n            beatmap.sliderMultiplier = parseFloat(value);\n            break;\n        case 'SliderTickRate':\n            beatmap.sliderTickRate = parseFloat(value);\n            break;\n        default:\n    }\n}\n\nfunction parseKeyValuePair(line: string): [string, string] {\n    return line.split(':').map(p => p.trim()) as [string, string];\n}\n\nfunction parseTimingPointLine(beatmap: PartialBeatmap, line: string) {\n    const parts = line.split(',');\n\n    const beatLength = parseFloat(parts[1]);\n    const { kiaiMode, omitFirstBarSignature } = extractEffectFlags(parts);\n\n    beatmap.timingPoints.push({\n        time: parseInt(parts[0]),\n        beatLength: beatLength,\n        timeSignature: extractTimeSignature(parts),\n        sampleSet: extractSampleSet(parts),\n        customSampleBank: extractCustomSampleBank(parts),\n        sampleVolume: extractSampleVolume(parts),\n        timingChange: extractTimingChange(parts),\n        kiaiMode: kiaiMode,\n        omitFirstBarSignature: omitFirstBarSignature,\n        speedMultiplier: extractSpeedMultiplier(beatLength),\n    });\n}\n\ninterface ParsedEffectFlags {\n    kiaiMode: boolean;\n    omitFirstBarSignature: boolean;\n}\n\nfunction extractEffectFlags(parts: string[]): ParsedEffectFlags {\n    let kiaiMode = false;\n    let omitFirstBarSignature = false;\n\n    if (parts.length > 7) {\n        const effectFlags: EffectFlags = parseInt(parts[7]);\n        kiaiMode = hasFlag(effectFlags, EffectFlags.Kiai);\n        omitFirstBarSignature = hasFlag(effectFlags, EffectFlags.OmitFirstBarLine);\n\n    }\n\n    return { kiaiMode, omitFirstBarSignature };\n}\n\nfunction extractTimeSignature(parts: string[]): number {\n    if (parts.length <= 2) {\n        return 4;\n    }\n\n    return parseInt(parts[2]) || 4;\n}\n\nfunction extractSampleSet(parts: string[]): number {\n    return (parts.length > 3) ? parseInt(parts[3]) : 0; // TODO: fix fallback\n}\n\nfunction extractCustomSampleBank(parts: string[]): number {\n    return (parts.length > 4) ? parseInt(parts[4]) : 0;\n}\n\nfunction extractSampleVolume(parts: string[]): number {\n    return (parts.length > 5) ? parseInt(parts[5]) : 100;  // TODO: fix fallback\n}\n\nfunction extractTimingChange(parts: string[]): boolean {\n    return (parts.length > 6) ? parts[6] === '1' : true;\n}\n\nfunction extractSpeedMultiplier(beatLength: number): number {\n    if (beatLength >= 0) {\n        return 1;\n    }\n\n    return 100 / -beatLength;\n}\nfunction parseColorLine(beatmap: PartialBeatmap, line: string) {\n    // eslint-disable-next-line\n    const [_, value] = parseKeyValuePair(line);\n    const [red, green, blue, ...rest] = value.split(',').map(p => parseInt(p));\n    const alpha = rest.length > 0 ? rest[0] : 255;\n\n    beatmap.colors.push({ red, green, blue, alpha });\n}\n\nfunction parseHitObjectLine(beatmap: PartialBeatmap, line: string) {\n    const parts = line.split(',');\n\n    const flags = parseInt(parts[3]) as HitObjectParsingFlags;\n    const type = getHitObjectType(flags);\n\n    if (type === null) {\n        console.log('Invalid hit object. Ignoring.', line);\n        return;\n    }\n\n    const baseHitObject: PartialBaseHitObject = {\n        x: parseInt(parts[0]),\n        y: parseInt(parts[1]),\n        startTime: parseInt(parts[2]),\n        newCombo: hasFlag(flags, HitObjectParsingFlags.NewCombo),\n        comboOffset: (flags & HitObjectParsingFlags.ComboOffset) / 16,\n        soundType: parseInt(parts[4]),\n    };\n\n    const hitObject = createHitObject(baseHitObject, type, parts.slice(5));\n    beatmap.hitObjects.push(hitObject);\n}\n\nfunction getHitObjectType(flags: HitObjectParsingFlags): HitObjectType | null {\n    if (flags & HitObjectParsingFlags.Circle) {\n        return HitObjectType.Circle;\n    }\n\n    if (flags & HitObjectParsingFlags.Slider) {\n        return HitObjectType.Slider;\n    }\n\n    if (flags & HitObjectParsingFlags.Spinner) {\n        return HitObjectType.Spinner;\n    }\n\n    return null;\n}\n\nfunction createHitObject(\n    baseHitObject: PartialBaseHitObject,\n    type: HitObjectType,\n    metadata: string[],\n): PartialHitObject {\n    switch (type) {\n        case HitObjectType.Circle:\n            return {\n                ...baseHitObject,\n                type: type,\n                metadata: parseCircleMetadata(metadata),\n            };\n        case HitObjectType.Slider:\n            return {\n                ...baseHitObject,\n                type: type,\n                metadata: parseSliderMetadata(metadata, baseHitObject),\n            };\n        case HitObjectType.Spinner:\n            return {\n                ...baseHitObject,\n                type: type,\n                metadata: parseSpinnerMetadata(metadata, baseHitObject),\n            };\n        default:\n            return assertNever(type);\n    }\n}\n\nfunction parseCircleMetadata(metadata: string[]): PartialCircleMetadata {\n    return {\n        soundSamples: metadata,\n    };\n}\n\nfunction parseSliderMetadata(\n    metadata: string[],\n    baseHitObject: PartialBaseHitObject\n): PartialSliderMetadata {\n    const [pathType, ...points] = metadata[0].split('|');\n    const pathLength = (metadata.length <= 2) ? 0 : parseInt(metadata[2]);\n\n    const controlPoints = points.map(pair => {\n        const [x, y] = pair.split(':').map(v => parseInt(v));\n        return pointSubtract({ x, y }, baseHitObject);\n    });\n\n    return {\n        path: new SliderPath(\n            pathType as PathType,\n            controlPoints,\n            pathLength,\n        ),\n        repeatCount: Math.max(0, parseInt(metadata[1]) - 1),\n        soundSamples: metadata.slice(3),\n    };\n}\n\nfunction parseSpinnerMetadata(\n    metadata: string[],\n    baseHitObject: PartialBaseHitObject\n): PartialSpinnerMetadata {\n    return {\n        endTime: Math.max(parseInt(metadata[0]), baseHitObject.startTime),\n        soundSamples: metadata.slice(1),\n    };\n}\n","import { Beatmap } from \"../types/Beatmap\";\nimport { Clock } from \"../types/Clock\";\nimport { Mod } from \"../types/Mod\";\nimport { fillBeatmapComputedAttributes } from \"./beatmap-difficulty\";\nimport { processBeatmap } from \"./beatmap-processing\";\nimport { GameMod } from \"./mods/GameMod\";\nimport { MOD_TABLE } from \"./mods/mod-table\";\nimport { parseBeatmap } from \"./parsing/beatmap-parser\";\n\nexport function readBeatmapFromString(content: string): Beatmap {\n    const partialBeatmap = parseBeatmap(content);\n    const clock = createClock();\n    const beatmap = processBeatmap(partialBeatmap, clock);\n\n    return fillBeatmapComputedAttributes(beatmap, clock);\n}\n\nexport function changeBeatmapMods(beatmap: Beatmap, mods: Set<Mod>): Beatmap {\n    resetDifficultyAttributes(beatmap);\n    const clock = createClock();\n    const modInstances = getModInstances(mods);\n    const newBeatmap = processBeatmap(beatmap, clock, modInstances);\n    return fillBeatmapComputedAttributes(newBeatmap, clock);\n}\n\nfunction createClock(): Clock {\n    return { rate: 1 };\n}\n\nfunction resetDifficultyAttributes(beatmap: Beatmap) {\n    beatmap.baseDifficulty = { ...beatmap.originalBaseDifficulty };\n}\n\nfunction getModInstances(mods: Set<Mod>): Set<GameMod> {\n    const modInstances = new Set<GameMod>();\n\n    for (const mod of mods) {\n        modInstances.add(MOD_TABLE[mod]);\n    }\n\n    return modInstances;\n}\n","import React from 'react';\nimport { Beatmap } from '../../types/Beatmap';\n\nexport interface BasicStatsProps {\n    beatmap: Beatmap;\n}\n\nexport const BasicStats: React.FC<BasicStatsProps> = ({ beatmap }) => {\n    const artist = beatmap.artist;\n\n    return (\n        <div className=\"basic-stats\">\n            <div className=\"title\">\n                {beatmap.title}\n            </div>\n\n            <div className=\"version\">\n                {beatmap.version}\n            </div>\n\n            <div className=\"author\">\n                {beatmap.source}{artist ? ` (${artist})` : ''} - Mapped by {beatmap.creator}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { clamp } from '../../helpers/utilities';\nimport './PartialBar.scss';\n\nexport interface PartialBarProps {\n    fraction: number;\n}\n\nexport const PartialBar: React.FC<PartialBarProps> = props => {\n    const filledPercentage = 100 * clamp(props.fraction, 0, 1);\n\n    return (\n        <div className=\"partial-bar\">\n            <div className=\"filled\" style={{ flexBasis: filledPercentage + '%' }}></div>\n            <div className=\"empty\" style={{ flexBasis: (100 - filledPercentage) + '%' }}></div>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport interface StatProps {\n    label: string;\n}\n\nexport const Stat: React.FC<StatProps> = ({ label, children }) => {\n    return (\n        <div className=\"stat\">\n            <div className=\"label\" id=\"label-container\">\n                {label}\n            </div>\n\n            {children}\n        </div>\n    );\n}\n","import React from 'react';\nimport { createStyleSheet } from '../../../helpers/utilities';\nimport { PartialBar } from '../PartialBar';\nimport { Stat } from './Stat';\n\nexport interface FractionalStatProps {\n    label: string;\n    fraction: number;\n}\n\nconst styles = createStyleSheet({\n    value: {\n        marginLeft: '10px',\n    },\n});\n\nexport const FractionalStat: React.FC<FractionalStatProps> = ({ label, fraction, children }) => {\n    return (\n        <Stat label={label}>\n            <PartialBar fraction={fraction} />\n\n            <div style={styles.value}>\n                {children}\n            </div>\n        </Stat>\n    );\n}\n","\nexport const colors = {\n    primary: '#15a8e7',\n    primaryBorder: '#1186b8',\n    primaryDark: '#1397cf',\n\n    secondary: '#b3b3b3',\n    secondaryBorder: '#8d8d8d',\n    secondaryDark: '#9a9a9a',\n};\n","import React, { CSSProperties } from 'react';\nimport { colors } from '../../../helpers/style-variables';\n\nconst style: CSSProperties = {\n    backgroundColor: colors.primaryBorder,\n    marginBottom: '5px',\n    marginTop: '5px',\n}\n\nexport const StatDivider: React.FC = () => (\n    <hr style={style} />\n);\n","import React from 'react';\nimport { round } from '../../helpers/utilities';\nimport { Beatmap } from '../../types/Beatmap';\nimport { FractionalStat } from '../base/stats/FractionalStat';\nimport { StatDivider } from '../base/stats/StatDivider';\n\nexport interface DifficultyStatsProps {\n    beatmap: Beatmap;\n}\n\ninterface StatProps {\n    label: string;\n    precision: number;\n    value: number;\n}\n\nconst DiffStat: React.FC<StatProps> = ({ label, value, precision, children }) => (\n    <FractionalStat label={label} fraction={value / 10}>\n        <span className=\"value\">\n            {round(value, precision)}\n        </span>\n\n        {children}\n    </FractionalStat>\n);\n\nexport const DifficultyStats: React.FC<DifficultyStatsProps> = ({ beatmap }) => {\n    const baseDifficulty = beatmap.baseDifficulty;\n    const derivedAttributes = beatmap.derivedDifficulty;\n    const od = derivedAttributes.overallDifficulty;\n    const ar = derivedAttributes.approachRate;\n\n    return (\n        <div className=\"stat-group\">\n            <DiffStat label='HP Drain' precision={2} value={baseDifficulty.hpDrainRate} />\n            <DiffStat label='Circle Size' precision={2} value={baseDifficulty.circleSize} />\n\n            <DiffStat\n                label='Overall Difficulty'\n                precision={2}\n                value={od.value}\n            >\n                <span className=\"tolerance\">\n                    ({round(od.toleranceMS, 1)} ms)\n                </span>\n            </DiffStat>\n\n            <DiffStat\n                label='Approach Rate'\n                precision={2}\n                value={ar.value}\n            >\n                <span className=\"tolerance\">\n                    ({round(ar.toleranceMS, 1)} ms)\n                </span>\n            </DiffStat>\n\n            <StatDivider />\n\n            <DiffStat label='Aim Strain' precision={3} value={derivedAttributes.aimStrain} />\n            <DiffStat label='Speed Strain' precision={3} value={derivedAttributes.speedStrain} />\n            <DiffStat label='Star Rating' precision={3} value={derivedAttributes.starRating} />\n        </div>\n    );\n};\n","import React from 'react';\nimport { isCircle, isSlider, isSpinner } from '../../helpers/type-inference';\nimport { getListMode, round } from '../../helpers/utilities';\nimport { Beatmap } from '../../types/Beatmap';\nimport { Stat } from '../base/stats/Stat';\nimport { StatDivider } from '../base/stats/StatDivider';\n\nexport interface HitObjectStatsProps {\n    beatmap: Beatmap;\n}\n\nexport const HitObjectStats: React.FC<HitObjectStatsProps> = ({ beatmap }) => {\n    const hitObjects = beatmap.hitObjects;\n    const sliders = hitObjects.filter(isSlider);\n    const sliderVelocities = sliders.map(s => s.metadata.velocity).sort();\n    const minVelocity = sliderVelocities[0];\n    const maxVelocity = sliderVelocities[sliderVelocities.length - 1];\n    const modeVelocity = getListMode(sliderVelocities);\n\n    return (\n        <div className=\"stat-group\">\n            <Stat label='Max Combo'>\n                {beatmap.derivedDifficulty.maxCombo}\n            </Stat>\n\n            <Stat label='Number of Objects'>\n                {hitObjects.length}\n            </Stat>\n\n            <Stat label='Circle Count'>\n                {hitObjects.filter(isCircle).length}\n            </Stat>\n\n            <Stat label='Slider Count'>\n                {hitObjects.filter(isSlider).length}\n            </Stat>\n\n            <Stat label='Spinner Count'>\n                {hitObjects.filter(isSpinner).length}\n            </Stat>\n\n            <StatDivider />\n\n            <Stat label='Slider Velocity'>\n                {(maxVelocity - minVelocity < 1e-3)\n                    ? round(minVelocity, 3)\n                    : `${round(minVelocity, 3)} - ${round(maxVelocity, 3)} (${round(modeVelocity, 3)})`}\n            </Stat>\n        </div>\n    );\n};\n","import React from 'react';\nimport { colors } from '../../helpers/style-variables';\nimport { createStyleSheet, merge } from '../../helpers/utilities';\nimport { Color } from '../../types/Color';\n\nexport interface HitObjectProps {\n    backgroundColor: Color;\n}\n\nconst styles = createStyleSheet({\n    outerLayer: {\n        border: `1px solid ${colors.secondaryDark}`,\n        borderRadius: '50%',\n        display: 'inline-block',\n    },\n\n    innerLayer: {\n        border: '3px solid white',\n        borderRadius: '50%',\n        display: 'inline-block',\n    },\n\n    circle: {\n        alignItems: 'center',\n        border: `1px solid ${colors.secondaryBorder}`,\n        borderRadius: '50%',\n        display: 'flex',\n        flexDirection: 'row',\n        height: '50px',\n        textAlign: 'center',\n        width: '50px',\n    },\n\n    text: {\n        color: 'white',\n        flex: '1 1',\n        fontSize: '1.1rem',\n        fontWeight: 'bold',\n        textShadow: `\n            black -1px -1px 1px,\n            black -1px 1px 1px,\n            black 1px -1px 1px,\n            black 1px 1px 1px\n        `,\n    },\n});\n\nexport const HitObject: React.FC<HitObjectProps> = ({ backgroundColor }) => {\n    const { red, green, blue, alpha } = backgroundColor;\n\n    return (\n        <div style={styles.outerLayer}>\n            <div style={styles.innerLayer}>\n                <div\n                    id='circle'\n                    style={merge(\n                        styles.circle,\n                        { backgroundColor: `rgba(${red}, ${green}, ${blue}, ${alpha})` },\n                    )}\n                >\n                    <div style={styles.text}>\n                        1\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n","import React from 'react';\nimport { Beatmap } from '../../types/Beatmap';\nimport { HitObject } from './HitObject';\n\nexport interface ComboColorsProps {\n    beatmap: Beatmap;\n}\n\nexport const ComboColors: React.FC<ComboColorsProps> = ({ beatmap }) => {\n    return (\n        <>\n            {beatmap.colors.map((color, index) => (\n                <HitObject key={index} backgroundColor={color} />\n            ))}\n        </>\n    )\n};\n","import React from 'react';\nimport { Beatmap } from '../../types/Beatmap';\nimport { Stat } from '../base/stats/Stat';\nimport { ComboColors } from './ComboColors';\n\nexport interface MiscStatsProps {\n    beatmap: Beatmap;\n}\n\nexport const MiscStats: React.FC<MiscStatsProps> = ({ beatmap }) => {\n    return (\n        <div className=\"stat-group\">\n            <Stat label='Beat Divisor'>\n                {beatmap.beatDivisor}\n            </Stat>\n\n            <Stat label='Slider Multiplier'>\n                {beatmap.sliderMultiplier}\n            </Stat>\n\n            <Stat label='Slider Tick Rate'>\n                {beatmap.sliderTickRate}\n            </Stat>\n\n            <Stat label='Combo Colors'>\n                {(beatmap.colors.length > 0)\n                    ? <ComboColors beatmap={beatmap} />\n                    : 'none'}\n            </Stat>\n        </div>\n    );\n};\n","import React from 'react';\nimport { colors } from '../../helpers/style-variables';\nimport { createStyleSheet, merge } from '../../helpers/utilities';\n\nexport interface ModProps {\n    color?: string;\n    selected?: boolean;\n    onClick: () => void;\n}\n\nconst styles = createStyleSheet({\n    mod: {\n        alignItems: 'center',\n        borderColor: colors.secondaryBorder,\n        borderStyle: 'solid',\n        borderRadius: '3px',\n        borderWidth: '1px',\n        boxSizing: 'border-box',\n        cursor: 'pointer',\n        display: 'flex',\n        flexDirection: 'row',\n        height: '2rem',\n        margin: '5px 5px',\n        textAlign: 'center',\n        width: '60px',\n    },\n\n    selected: {\n        borderWidth: '3px',\n        fontSize: '1.2rem',\n        fontWeight: 'bold',\n    },\n\n    blocked: {\n        backgroundColor: '#ddd',\n        borderColor: '#bbb',\n        cursor: 'not-allowed',\n        fontSize: '0.9rem',\n    },\n\n    modText: {\n        flex: '1 1',\n    },\n});\n\nexport const Mod: React.FC<ModProps> = props => {\n    return (\n        <div\n            style={merge(\n                styles.mod,\n                !!props.color && { backgroundColor: props.color },\n                props.selected && styles.selected,\n            )}\n            onClick={props.onClick}\n        >\n            <div style={styles.modText}>\n                {props.children}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { createStyleSheet } from '../../helpers/utilities';\nimport { Mod as ModType } from '../../types/Mod';\nimport { Mod } from './Mod';\n\nexport interface ModSelectorProps {\n    selectedMods: Set<ModType>;\n    onModClick: (mod: ModType) => void;\n}\n\nconst styles = createStyleSheet({\n    container: {\n        alignItems: 'center',\n        display: 'flex',\n        flexDirection: 'row',\n    },\n});\n\nconst difficultyReductionMods = [ModType.Easy, ModType.HalfTime];\nconst difficultyIncreaseMods = [ModType.HardRock, ModType.DoubleTime];\n\nexport const ModSelector: React.FC<ModSelectorProps> = ({ selectedMods, onModClick }) => {\n    return (\n        <div style={styles.container}>\n            {difficultyReductionMods.map((mod, index) => (\n                <Mod\n                    key={index}\n                    color='#50e250'\n                    selected={selectedMods.has(mod)}\n                    onClick={() => onModClick(mod)}\n                >\n                    {mod}\n                </Mod>\n            ))}\n\n            {difficultyIncreaseMods.map((mod, index) => (\n                <Mod\n                    key={index}\n                    color='#ff9090'\n                    selected={selectedMods.has(mod)}\n                    onClick={() => onModClick(mod)}\n                >\n                    {mod}\n                </Mod>\n            ))}\n        </div>\n    );\n};\n","import React, { useState } from 'react';\nimport { changeBeatmapMods } from '../helpers/beatmap';\nimport { Beatmap } from '../types/Beatmap';\nimport { Mod as ModType } from '../types/Mod';\nimport { BasicStats } from './beatmap-data/BasicStats';\nimport { DifficultyStats } from './beatmap-data/DifficultyStats';\nimport { HitObjectStats } from './beatmap-data/HitObjectStats';\nimport { MiscStats } from './beatmap-data/MiscStats';\nimport { ModSelector } from './beatmap-data/ModSelector';\nimport './Main.scss';\n\nexport interface MainProps {\n    beatmap: Beatmap | null;\n    onBeatmapMutation: (beatmap: Beatmap) => void;\n}\n\nconst mutuallyExclusiveMods: [ModType, ModType][] = [\n    [ModType.Easy, ModType.HardRock],\n    [ModType.HalfTime, ModType.DoubleTime]\n];\n\nfunction removeConflictingMods(selectedMods: Set<ModType>, mod: ModType) {\n    for (const pair of mutuallyExclusiveMods) {\n        if (pair[0] === mod) {\n            selectedMods.delete(pair[1]);\n        }\n\n        if (pair[1] === mod) {\n            selectedMods.delete(pair[0]);\n        }\n    }\n}\n\nexport const Main: React.FC<MainProps> = ({ beatmap, onBeatmapMutation }) => {\n    const [selectedMods, setSelectedMods] = useState(new Set<ModType>());\n\n    if (beatmap === null) {\n        return (\n            <div>\n                Import/Select a beatmap in the sidebar to analyze it.\n            </div>\n        );\n    }\n\n    function handleModClick(mod: ModType) {\n        if (selectedMods.has(mod)) {\n            selectedMods.delete(mod);\n        } else {\n            selectedMods.add(mod);\n            removeConflictingMods(selectedMods, mod);\n        }\n\n        onBeatmapMutation(changeBeatmapMods(beatmap!, selectedMods));\n        setSelectedMods(new Set(selectedMods));\n    }\n\n    return (\n        <div className=\"main\">\n            <ModSelector selectedMods={selectedMods} onModClick={handleModClick} />\n            <BasicStats beatmap={beatmap} />\n            <DifficultyStats beatmap={beatmap} />\n            <HitObjectStats beatmap={beatmap} />\n            <MiscStats beatmap={beatmap} />\n        </div>\n    );\n};\n","import React from 'react';\nimport { Beatmap } from '../../types/Beatmap';\nimport './BeatmapSummary.scss';\n\nexport interface BeatmapSummaryProps {\n    beatmap: Beatmap;\n    isSelected: boolean;\n    onClick: () => void;\n}\n\nexport const BeatmapSummary: React.FC<BeatmapSummaryProps> = props => {\n    return (\n        <div\n            className={\"beatmap-summary \" + (props.isSelected ? 'selected' : '')}\n            onClick={props.onClick}\n        >\n            {/* {beatmap.source} ({beatmap.artist}) - {beatmap.title} [{beatmap.version}] */}\n            <div className=\"title\">\n                {props.beatmap.title}\n            </div>\n\n            <div className=\"author\">\n                {props.beatmap.artist} // {props.beatmap.creator}\n            </div>\n\n            <div className=\"version\">\n                {props.beatmap.version}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { coalesce, createStyleSheet } from '../helpers/utilities';\nimport { useFileUpload } from '../hooks/useFileUpload';\nimport { Beatmap } from '../types/Beatmap';\nimport { BeatmapSummary } from './beatmap-data/BeatmapSummary';\n\nexport interface SidebarProps {\n    beatmapList: Beatmap[];\n    selectedBeatmap: number | null;\n    onImportBeatmap: (beatmapString: string) => void;\n    onSelectBeatmap: (beatmapIndex: number) => void;\n}\n\nconst styles = createStyleSheet({\n    wrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n    }\n});\n\nexport const Sidebar: React.FC<SidebarProps> = props => {\n    const handleImportClick = useFileUpload(props.onImportBeatmap);\n\n    return (\n        <div style={styles.wrapper}>\n            <Button variant=\"primary\" onClick={handleImportClick}>\n                Import Beatmap\n            </Button>\n\n            <div className=\"beatmap-list\">\n                {props.beatmapList.map((beatmap, index) => (\n                    <BeatmapSummary\n                        key={coalesce(beatmap.beatmapId, beatmap.title)}\n                        beatmap={beatmap}\n                        isSelected={index === props.selectedBeatmap}\n                        onClick={() => props.onSelectBeatmap(index)}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n};\n","\nexport function useFileUpload(onUpload: (fileContent: string) => void) {\n    // function handleFileChange(uploadEvent: ChangeEvent<HTMLInputElement>) {\n    function handleFileChange(uploadEvent: Event) {\n        const fileReader = new FileReader();\n\n        fileReader.onload = fileEvent => {\n            onUpload((fileEvent.target as any).result);\n        };\n\n        const fileList = (uploadEvent.target as any).files;\n        if (fileList.length > 0) {\n            fileReader.readAsText(fileList[0]);\n        }\n    }\n\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.addEventListener('change', handleFileChange);\n\n    return () => fileInput.click();\n\n    // TODO: is there a more elegant way (something like the following)?\n    // const fileInputRef = useRef<HTMLInputElement>(null);\n\n    // useState(\n    //     <input ref={fileInputRef} type=\"file\" onChange={handleFileChange} />\n    // );\n\n    // return () => fileInputRef.current!.click();\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { quaver } from './beatmap-mocks/quaver.beatmap';\nimport { Main } from './components/Main';\nimport { Sidebar } from './components/Sidebar';\nimport { readBeatmapFromString } from './helpers/beatmap';\nimport { Beatmap } from './types/Beatmap';\n\nexport const App: React.FC = () => {\n    const [beatmapList, setBeatmapList] = useState<Beatmap[]>([]);\n    const [selectedBeatmap, setSelectedBeatmap] = useState<number | null>(0);\n\n    function handleImportBeatmap(beatmapString: string) {\n        const beatmap = readBeatmapFromString(beatmapString);\n        setBeatmapList(beatmapList.concat([beatmap]));\n    }\n\n    function handleBeatmapMutation(beatmap: Beatmap) {\n        if (selectedBeatmap !== null) {\n            beatmapList[selectedBeatmap] = beatmap;\n            setBeatmapList([...beatmapList]);\n        }\n    }\n\n    if (beatmapList.length === 0) {\n        handleImportBeatmap(quaver);\n    }\n\n    return (\n        <div className=\"page\">\n            <header>\n                osu! Beatmap Analyzer\n            </header>\n\n            <aside>\n                <Sidebar\n                    beatmapList={beatmapList}\n                    selectedBeatmap={selectedBeatmap}\n                    onImportBeatmap={handleImportBeatmap}\n                    onSelectBeatmap={beatmapIndex => setSelectedBeatmap(beatmapIndex)}\n                />\n            </aside>\n\n            <main>\n                <Main\n                    beatmap={\n                        selectedBeatmap === null\n                            ? null\n                            : beatmapList[selectedBeatmap]\n                    }\n                    onBeatmapMutation={handleBeatmapMutation}\n                />\n            </main>\n        </div>\n    );\n}\n","export const quaver = `\nosu file format v14\n\n[General]\nAudioFilename: audio.mp3\nAudioLeadIn: 0\nPreviewTime: 37767\nCountdown: 0\nSampleSet: Soft\nStackLeniency: 0.7\nMode: 0\nLetterboxInBreaks: 0\nWidescreenStoryboard: 1\n\n[Editor]\nDistanceSpacing: 1\nBeatDivisor: 4\nGridSize: 32\nTimelineZoom: 2\n\n[Metadata]\nTitle:quaver\nTitleUnicode:quaver ♪\nArtist:dj TAKA\nArtistUnicode:dj TAKA\nCreator:Sotarks\nVersion:Akitoshi's Easy\nSource:REFLEC BEAT limelight\nTags:risk junk beatmania IIDX 19 Lincle jubeat saucer jukebeat KONAMI music pack 25 pop'n music Sunny Park plus MUSIC PACK 29 + ポップンリズミン パック1 MUSIC PACK 19 cut edit short ver version akitoshi corinn -laura- myxomatosis desperate-kun shunao shogunmoon kencho yukiyo snownino_ reform kujinn yuii- eiri- ayyri doormat lasse onlybiscuit armin a_r_m_i_n kyuukai yaleufeu nevo monstrata fieryrage fiery\nBeatmapID:1854033\nBeatmapSetID:873811\n\n[Difficulty]\nHPDrainRate:2\nCircleSize:3\nOverallDifficulty:2\nApproachRate:3\nSliderMultiplier:0.8\nSliderTickRate:1\n\n[Events]\n//Background and Video events\n0,0,\"bg.jpg\",0,0\n//Break Periods\n//Storyboard Layer 0 (Background)\n//Storyboard Layer 1 (Fail)\n//Storyboard Layer 2 (Pass)\n//Storyboard Layer 3 (Foreground)\n//Storyboard Sound Samples\n\n[TimingPoints]\n1198,329.67032967033,4,2,22,32,1,0\n1198,-133.333333333333,4,2,22,32,0,0\n6472,-100,4,2,22,52,0,0\n13066,326.086956521739,4,2,22,62,1,0\n13066,-100,4,2,22,62,0,0\n37848,322.58064516129,4,2,22,72,1,0\n37848,-90.9090909090909,4,2,22,72,0,0\n48170,-90.9090909090909,4,2,22,82,0,0\n53331,-90.9090909090909,4,2,22,72,0,0\n57202,-90.9090909090909,4,2,22,82,0,0\n58493,-83.3333333333333,4,2,22,92,0,0\n64944,-90.9090909090909,4,2,22,5,0,0\n\n\n[Colours]\nCombo1 : 114,102,255\nCombo2 : 255,247,91\nCombo3 : 104,255,209\nCombo4 : 220,168,255\n\n[HitObjects]\n256,192,1198,12,2,5154,0:0:0:0:\n297,198,6472,6,0,P|353:227|458:206,2,160,6|2|2,1:2|0:0|0:0,0:0:0:0:\n167,78,8450,1,2,0:0:0:0:\n21,177,9110,6,0,L|41:346,1,160,6|6,1:2|1:2,0:0:0:0:\n214,359,10428,2,0,L|223:279,1,80,2|2,1:2|1:2,0:0:0:0:\n267,204,11088,2,0,L|258:124,2,80,2|2|0,1:2|1:2|0:0,0:0:0:0:\n267,204,13066,6,0,B|181:196|199:242|108:231,2,160,6|2|2,1:2|1:2|1:2,0:0:0:0:\n347,239,14696,1,10,0:2:0:0:\n420,189,15022,2,0,P|427:132|419:102,1,80,2|10,1:2|0:2,0:0:0:0:\n359,48,15674,6,0,B|318:60|282:38|282:38|217:84|217:84|180:62|126:71,1,240,2|8,1:2|0:2,0:0:0:0:\n56,40,16979,2,0,B|46:83|68:117|68:117|21:181|21:181|42:219|33:273,1,240,2|10,1:2|1:2,0:0:0:0:\n25,346,18283,6,0,P|109:366|188:335,1,160,6|2,1:2|1:2,0:0:0:0:\n234,276,19261,1,10,1:2:0:0:\n253,190,19587,2,0,L|246:103,2,80,2|10|2,1:2|0:2|1:2,0:0:0:0:\n323,351,20892,6,0,P|392:364|477:326,2,160,2|2|2,1:2|1:2|0:2,0:0:0:0:\n250,300,22522,1,2,0:2:0:0:\n179,247,22848,2,0,P|135:239|89:244,1,80,2|2,1:2|1:2,0:0:0:0:\n14,261,23500,6,0,P|8:178|2:96,2,160,6|2|2,1:2|1:2|1:2,0:0:0:0:\n70,328,25131,1,10,0:2:0:0:\n147,369,25457,2,0,P|187:380|236:367,1,80,2|10,1:2|0:2,0:0:0:0:\n304,337,26109,6,0,B|301:288|318:259|318:259|301:220|276:191|276:191|274:162|300:109,1,240,2|10,1:2|0:2,0:0:0:0:\n357,51,27413,2,0,B|308:48|279:65|279:65|240:48|211:23|211:23|182:21|129:47,1,240,2|10,1:2|1:2,0:0:0:0:\n62,93,28718,6,0,B|84:170|40:176|57:256,1,160,6|2,1:2|1:2,0:0:0:0:\n124,306,29696,1,10,0:2:0:0:\n200,262,30022,2,0,L|291:267,2,80,2|10|2,1:2|0:2|1:2,0:0:0:0:\n164,89,31326,6,0,P|236:54|331:65,1,160,2|2,1:2|1:2,0:0:0:0:\n393,95,32305,1,10,0:2:0:0:\n442,168,32631,2,0,L|433:257,1,80,2|10,1:2|1:2,0:0:0:0:\n371,309,33283,2,0,L|282:300,1,80,2|10,1:2|1:2,0:0:0:0:\n256,192,33935,12,0,36544,0:0:0:0:\n243,137,37848,6,0,L|140:152,2,88.000002685547,6|10|2,1:2|0:2|1:2,0:0:0:0:\n330,129,38815,1,10,0:2:0:0:\n400,182,39138,2,0,P|411:230|401:274,1,88.000002685547,2|10,1:2|0:2,0:0:0:0:\n351,337,39783,2,0,P|303:348|259:338,1,88.000002685547,2|10,1:2|0:2,0:0:0:0:\n180,319,40428,6,0,B|85:315|107:367|10:359,2,176.000005371094,2|2|2,1:2|1:2|1:2,0:0:0:0:\n266,341,42041,1,10,0:2:0:0:\n343,298,42364,2,0,P|348:242|339:207,1,88.000002685547,2|10,1:2|1:2,0:0:0:0:\n280,146,43009,6,0,L|289:50,2,88.000002685547,6|10|2,1:2|0:2|1:2,0:0:0:0:\n259,231,43977,1,10,1:2:0:0:\n197,293,44299,2,0,P|146:299|99:288,1,88.000002685547,2|10,1:2|0:2,0:0:0:0:\n33,249,44944,1,2,1:2:0:0:\n135,106,45589,6,0,L|127:9,2,88.000002685547,2|10|2,1:2|0:2|1:2,0:0:0:0:\n195,169,46557,1,10,0:2:0:0:\n280,146,46880,2,0,P|318:125|372:122,1,88.000002685547,2|10,1:2|1:2,0:0:0:0:\n447,139,47525,1,2,1:2:0:0:\n485,217,47847,1,10,1:2:0:0:\n436,290,48170,6,0,L|445:384,2,88.000002685547,6|10|2,1:2|0:2|1:2,0:0:0:0:\n360,244,49138,1,10,0:2:0:0:\n280,280,49460,2,0,P|234:289|194:281,1,88.000002685547,2|10,1:2|0:2,0:0:0:0:\n125,225,50106,2,0,P|117:181|126:139,1,88.000002685547,2|10,1:2|0:2,0:0:0:0:\n157,56,50751,6,0,B|211:66|211:66|268:43|268:43|331:55,2,176.000005371094,2|2|2,1:2|1:2|1:2,0:0:0:0:\n72,31,52364,1,10,0:2:0:0:\n9,93,52686,2,0,P|1:138|14:195,1,88.000002685547,2|10,1:2|1:2,0:0:0:0:\n75,235,53331,6,0,P|141:208|253:220,1,176.000005371094,4|0,1:2|3:0,0:0:0:0:\n371,337,54622,2,0,P|305:364|193:352,1,176.000005371094,0|0,3:0|3:0,0:0:0:0:\n129,306,55589,1,0,1:0:0:0:\n75,235,55912,6,0,L|90:55,1,176.000005371094,0|0,1:0|1:0,0:0:0:0:\n262,25,57202,2,0,L|269:112,1,88.000002685547,6|6,1:2|1:2,0:0:0:0:\n327,178,57847,2,0,L|319:265,1,88.000002685547,6|6,1:2|1:2,0:0:0:0:\n304,360,58493,5,6,1:2:0:0:\n209,376,58815,1,2,1:2:0:0:\n126,326,59138,2,0,B|102:233|102:233|129:186,1,143.999995605469,2|6,1:2|1:2,0:0:0:0:\n256,192,59783,12,0,64944,0:0:0:0:\n`;\n"],"sourceRoot":""}